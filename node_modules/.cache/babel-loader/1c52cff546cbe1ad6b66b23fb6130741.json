{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\src\\\\Nightmode\\\\ThemeContext.js\";\nimport React from \"react\";\nimport { ThemeProvider as EmotionThemeProvider } from \"emotion-theming\";\nimport theme from \"./theme.js\";\nconst defaultContextData = {\n  dark: false,\n  toggle: () => {}\n};\nconst ThemeContext = React.createContext(defaultContextData);\n\nconst useTheme = () => React.useContext(ThemeContext);\n\nconst useEffectDarkMode = () => {\n  const _React$useState = React.useState({\n    dark: false,\n    hasThemeMounted: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        themeState = _React$useState2[0],\n        setThemeState = _React$useState2[1];\n\n  React.useEffect(() => {\n    const lsDark = localStorage.getItem(\"dark\") === \"true\";\n    setThemeState(_objectSpread({}, themeState, {\n      dark: lsDark,\n      hasThemeMounted: true\n    }));\n  }, []);\n  return [themeState, setThemeState];\n};\n\nconst ThemeProvider = ({\n  children\n}) => {\n  const _useEffectDarkMode = useEffectDarkMode(),\n        _useEffectDarkMode2 = _slicedToArray(_useEffectDarkMode, 2),\n        themeState = _useEffectDarkMode2[0],\n        setThemeState = _useEffectDarkMode2[1];\n\n  if (!themeState.hasThemeMounted) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n  const toggle = () => {\n    const dark = !themeState.dark;\n    localStorage.setItem(\"dark\", JSON.stringify(dark));\n    setThemeState(_objectSpread({}, themeState, {\n      dark\n    }));\n  };\n\n  const computedTheme = themeState.dark ? theme(\"dark\") : theme(\"light\");\n  return React.createElement(EmotionThemeProvider, {\n    theme: computedTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ThemeContext.Provider, {\n    value: {\n      dark: themeState.dark,\n      toggle\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, children));\n};\n\nexport { ThemeProvider, useTheme };","map":{"version":3,"sources":["C:\\Users\\Hp\\Desktop\\IslamCheck\\src\\Nightmode\\ThemeContext.js"],"names":["React","ThemeProvider","EmotionThemeProvider","theme","defaultContextData","dark","toggle","ThemeContext","createContext","useTheme","useContext","useEffectDarkMode","useState","hasThemeMounted","themeState","setThemeState","useEffect","lsDark","localStorage","getItem","children","setItem","JSON","stringify","computedTheme"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,oBAA1B,QAAsD,iBAAtD;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,IAAI,EAAE,KADmB;AAEzBC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAFS,CAA3B;AAKA,MAAMC,YAAY,GAAGP,KAAK,CAACQ,aAAN,CAAoBJ,kBAApB,CAArB;;AACA,MAAMK,QAAQ,GAAG,MAAMT,KAAK,CAACU,UAAN,CAAiBH,YAAjB,CAAvB;;AAEA,MAAMI,iBAAiB,GAAG,MAAM;AAAA,0BACMX,KAAK,CAACY,QAAN,CAAe;AACjDP,IAAAA,IAAI,EAAE,KAD2C;AAEjDQ,IAAAA,eAAe,EAAE;AAFgC,GAAf,CADN;AAAA;AAAA,QACvBC,UADuB;AAAA,QACXC,aADW;;AAK9Bf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpB,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,MAAhD;AACAJ,IAAAA,aAAa,mBAAMD,UAAN;AAAkBT,MAAAA,IAAI,EAAEY,MAAxB;AAAgCJ,MAAAA,eAAe,EAAE;AAAjD,OAAb;AACD,GAHD,EAGG,EAHH;AAKA,SAAO,CAACC,UAAD,EAAaC,aAAb,CAAP;AACD,CAXD;;AAaA,MAAMd,aAAa,GAAG,CAAC;AAAEmB,EAAAA;AAAF,CAAD,KAAkB;AAAA,6BACFT,iBAAiB,EADf;AAAA;AAAA,QAC/BG,UAD+B;AAAA,QACnBC,aADmB;;AAGtC,MAAI,CAACD,UAAU,CAACD,eAAhB,EAAiC;AAC/B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAMP,MAAM,GAAG,MAAM;AACnB,UAAMD,IAAI,GAAG,CAACS,UAAU,CAACT,IAAzB;AACAa,IAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAelB,IAAf,CAA7B;AACAU,IAAAA,aAAa,mBAAMD,UAAN;AAAkBT,MAAAA;AAAlB,OAAb;AACD,GAJD;;AAMA,QAAMmB,aAAa,GAAGV,UAAU,CAACT,IAAX,GAAkBF,KAAK,CAAC,MAAD,CAAvB,GAAkCA,KAAK,CAAC,OAAD,CAA7D;AAEA,SACE,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEqB,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLnB,MAAAA,IAAI,EAAES,UAAU,CAACT,IADZ;AAELC,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGc,QANH,CADF,CADF;AAYD,CA3BD;;AA6BA,SAASnB,aAAT,EAAwBQ,QAAxB","sourcesContent":["import React from \"react\";\r\nimport { ThemeProvider as EmotionThemeProvider } from \"emotion-theming\";\r\nimport theme from \"./theme.js\";\r\n\r\nconst defaultContextData = {\r\n  dark: false,\r\n  toggle: () => {}\r\n};\r\n\r\nconst ThemeContext = React.createContext(defaultContextData);\r\nconst useTheme = () => React.useContext(ThemeContext);\r\n\r\nconst useEffectDarkMode = () => {\r\n  const [themeState, setThemeState] = React.useState({\r\n    dark: false,\r\n    hasThemeMounted: false\r\n  });\r\n  React.useEffect(() => {\r\n    const lsDark = localStorage.getItem(\"dark\") === \"true\";\r\n    setThemeState({ ...themeState, dark: lsDark, hasThemeMounted: true });\r\n  }, []);\r\n\r\n  return [themeState, setThemeState];\r\n};\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeState, setThemeState] = useEffectDarkMode();\r\n\r\n  if (!themeState.hasThemeMounted) {\r\n    return <div />;\r\n  }\r\n\r\n  const toggle = () => {\r\n    const dark = !themeState.dark;\r\n    localStorage.setItem(\"dark\", JSON.stringify(dark));\r\n    setThemeState({ ...themeState, dark });\r\n  };\r\n\r\n  const computedTheme = themeState.dark ? theme(\"dark\") : theme(\"light\");\r\n\r\n  return (\r\n    <EmotionThemeProvider theme={computedTheme}>\r\n      <ThemeContext.Provider\r\n        value={{\r\n          dark: themeState.dark,\r\n          toggle\r\n        }}\r\n      >\r\n        {children}\r\n      </ThemeContext.Provider>\r\n    </EmotionThemeProvider>\r\n  );\r\n};\r\n\r\nexport { ThemeProvider, useTheme };\r\n"]},"metadata":{},"sourceType":"module"}