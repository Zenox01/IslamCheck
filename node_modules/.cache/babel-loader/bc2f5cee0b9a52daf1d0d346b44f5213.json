{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\src\\\\Settings.js\";\nimport React, { useState, useContext } from 'react';\nimport { useTheme } from \"./Nightmode/ThemeContext\";\nimport { InfoContext, ReadingContext, ArbicFontSizeContext, TopContext, TransFontChangeContext } from \"./Store\";\nimport Reciter from \"./Settings-Reciters\";\nimport Translation from \"./Settings-Translations\";\nimport Tooltip from \"./Settings-Tooltip-Submenu\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport \"./Set.css\";\nimport FontSizeChanger from 'react-font-size-changer';\nimport { FormattedMessage } from \"react-intl\";\nconst useStyles = makeStyles({\n  list: {\n    width: \"350px\"\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  nested: {\n    paddingLeft: \"40px\"\n  }\n});\nconst color = {\n  color: '#747474',\n  border: 'none'\n};\nexport default function TemporaryDrawer() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        Count = _useState2[0],\n        setCount = _useState2[1];\n\n  const themeState = useTheme();\n  const classes = useStyles();\n\n  const _useContext = useContext(InfoContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        Showing = _useContext2[0],\n        setShow = _useContext2[1];\n\n  const _useContext3 = useContext(TopContext),\n        _useContext4 = _slicedToArray(_useContext3, 2),\n        Top = _useContext4[0],\n        setTop = _useContext4[1];\n\n  const _useContext5 = useContext(ReadingContext),\n        _useContext6 = _slicedToArray(_useContext5, 2),\n        ShowRead = _useContext6[0],\n        setRead = _useContext6[1];\n\n  const _useContext7 = useContext(ArbicFontSizeContext),\n        _useContext8 = _slicedToArray(_useContext7, 2),\n        ArbicFontSize = _useContext8[0],\n        setArbicFontSize = _useContext8[1];\n\n  const _useContext9 = useContext(TransFontChangeContext),\n        _useContext10 = _slicedToArray(_useContext9, 2),\n        TransFontSize = _useContext10[0],\n        setTransFont = _useContext10[1];\n\n  const _useState3 = useState({\n    right: false\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Drawerstate = _useState4[0],\n        setDState = _useState4[1];\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setDState(_objectSpread({}, Drawerstate, {\n      [side]: open\n    }));\n  };\n\n  const sideList = side => React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, true),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      setCount(Count + 1);\n      setShow(!Showing);\n\n      if (Showing || Count === 1) {\n        setTop(true);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    style: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \" \", React.createElement(\"i\", {\n    className: \"fas fa-info-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(Typography, {\n      style: {\n        color: '#747474',\n        marginLeft: \"-20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"SurahInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      setRead(!ShowRead);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    style: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" \", React.createElement(\"i\", {\n    className: \"fas fa-book-open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(Typography, {\n      style: {\n        color: '#747474',\n        marginLeft: \"-20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"Reading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      themeState.toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    style: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-lightbulb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(Typography, {\n      style: {\n        color: '#747474',\n        marginLeft: \"-20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, themeState.dark ? React.createElement(FormattedMessage, {\n      id: \"Daymode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : React.createElement(FormattedMessage, {\n      id: \"Nightmode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Reciter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), ShowRead ? \"\" : React.createElement(Translation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(List, {\n    subheader: React.createElement(Typography, {\n      style: {\n        color: '#747474',\n        marginLeft: \"16px\",\n        paddingTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"FontSize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidenavright-lower\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arabic-size arabictxt_size d-flex justify-content-between ml-4 mr-4 align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(FontSizeChanger, {\n    targets: ['.ArabicFontChange'],\n    onChange: (element, newValue, oldValue) => {\n      setArbicFontSize(newValue);\n    },\n    options: {\n      stepSize: 2,\n      range: 1000\n    },\n    className: \"arabictxt_size\",\n    customButtons: {\n      down: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fas fa-minus\",\n        style: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), \" \")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    style: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Arabic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(FontSizeChanger, {\n    targets: ['.ArabicFontChange'],\n    onChange: (element, newValue, oldValue) => {\n      if (parseInt(newValue) > 50) return;\n      setArbicFontSize(newValue);\n    },\n    options: {\n      stepSize: 2,\n      range: 1000\n    },\n    className: \"arabictxt_size\",\n    customButtons: {\n      up: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fas fa-plus\",\n        style: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), \" \")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"arabic-size transtxt_size d-flex justify-content-between ml-4 mr-4 align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(FontSizeChanger, {\n    targets: ['.TranslationFontChanger'],\n    onChange: (element, newValue, oldValue) => {\n      setTransFont(newValue);\n    },\n    options: {\n      stepSize: 2,\n      range: 1000\n    },\n    className: \"transtxt_size\",\n    customButtons: {\n      down: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-minus\",\n        style: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    style: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Translation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), React.createElement(FontSizeChanger, {\n    targets: ['.TranslationFontChanger'],\n    onChange: (element, newValue, oldValue) => {\n      setTransFont(newValue);\n    },\n    options: {\n      stepSize: 2,\n      range: 1000\n    },\n    className: \"transtxt_size\",\n    customButtons: {\n      up: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-plus\",\n        style: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })))));\n\n  return React.createElement(\"div\", {\n    className: \"NightM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"btn \",\n    onClick: toggleDrawer('right', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \" \", React.createElement(\"span\", {\n    className: \"mobilehidesetting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), \" \", React.createElement(\"i\", {\n    className: \"fas fa-cog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(Drawer, {\n    transitionDuration: 800,\n    anchor: \"right\",\n    open: Drawerstate.right,\n    onClose: toggleDrawer('right', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"sidenavright-upper d-flex justify-content-between align-items-center NightM\",\n    onClick: toggleDrawer('right', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    className: \"closebtn\",\n    id: \"sideNavTogglerInnerRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }))), sideList('right')));\n}","map":{"version":3,"sources":["C:\\Users\\Hp\\Desktop\\IslamCheck\\src\\Settings.js"],"names":["React","useState","useContext","useTheme","InfoContext","ReadingContext","ArbicFontSizeContext","TopContext","TransFontChangeContext","Reciter","Translation","Tooltip","makeStyles","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","Typography","FontSizeChanger","FormattedMessage","useStyles","list","width","fullList","nested","paddingLeft","color","border","TemporaryDrawer","Count","setCount","themeState","classes","Showing","setShow","Top","setTop","ShowRead","setRead","ArbicFontSize","setArbicFontSize","TransFontSize","setTransFont","right","Drawerstate","setDState","toggleDrawer","side","open","event","type","key","sideList","marginLeft","toggle","dark","paddingTop","element","newValue","oldValue","stepSize","range","down","parseInt","up","cursor"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport {useTheme} from \"./Nightmode/ThemeContext\";\r\nimport {InfoContext, ReadingContext,ArbicFontSizeContext,TopContext,TransFontChangeContext} from \"./Store\";\r\nimport Reciter from \"./Settings-Reciters\"\r\nimport Translation from \"./Settings-Translations\"\r\nimport Tooltip from \"./Settings-Tooltip-Submenu\"\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./Set.css\";\r\nimport FontSizeChanger from 'react-font-size-changer';\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: \"350px\",\r\n\r\n\r\n    },\r\n    fullList: {\r\n        width: \"auto\",\r\n\r\n    },\r\n    nested: {\r\n        paddingLeft: \"40px\",\r\n    },\r\n\r\n});\r\nconst color = {\r\n    color: '#747474',\r\n    border: 'none'\r\n};\r\n\r\nexport default function TemporaryDrawer() {\r\n    const [Count, setCount] = useState(0);\r\n    const themeState = useTheme();\r\n    const classes = useStyles();\r\n    const [Showing, setShow] = useContext(InfoContext);\r\n    const [Top, setTop] = useContext(TopContext);\r\n\r\n    const [ShowRead, setRead] = useContext(ReadingContext);\r\n    const [ArbicFontSize, setArbicFontSize] = useContext(ArbicFontSizeContext);\r\n    const [TransFontSize, setTransFont] = useContext(TransFontChangeContext);\r\n   \r\n    const [Drawerstate, setDState] = useState({\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (side, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setDState({...Drawerstate, [side]: open});\r\n    };\r\n\r\n    const sideList = side => (\r\n        <div className={classes.list}\r\n             role=\"presentation\"\r\n             onClick={toggleDrawer(side, true)}\r\n             onKeyDown={toggleDrawer(side, false)}\r\n\r\n        >\r\n\r\n\r\n            <List>\r\n                <ListItem button onClick={() => {\r\n                    setCount(Count+1);\r\n                    setShow(!Showing);\r\n\r\n                    if(Showing || Count===1){\r\n                         setTop(true)\r\n                       \r\n                        \r\n                    }\r\n                 \r\n                }}>\r\n                    <ListItemIcon style={color}> <i className=\"fas fa-info-circle\"></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={<Typography style={{color: '#747474', marginLeft: \"-20px\"}}><FormattedMessage\r\n                        id=\"SurahInfo\"/></Typography>}/>\r\n                </ListItem>\r\n\r\n                <ListItem button onClick={() => {\r\n                    setRead(!ShowRead);\r\n               \r\n                }}>\r\n                    <ListItemIcon style={color}> <i className=\"fas fa-book-open\"></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={<Typography style={{color: '#747474', marginLeft: \"-20px\"}}><FormattedMessage\r\n                        id=\"Reading\"/></Typography>}/>\r\n                </ListItem>\r\n\r\n                <ListItem button onClick={() => {\r\n                    themeState.toggle()\r\n                   \r\n                }}>\r\n                    <ListItemIcon style={color}>\r\n                      <i className=\"fas fa-lightbulb\"></i></ListItemIcon>\r\n                    <ListItemText primary={<Typography style={{color: '#747474', marginLeft: \"-20px\"}}>{(themeState.dark) ?\r\n                        <FormattedMessage id=\"Daymode\"/> :\r\n                        <FormattedMessage id=\"Nightmode\"/>}</Typography>}/>\r\n                </ListItem>\r\n            </List>\r\n            <Divider/>\r\n            <List>\r\n                <Reciter/>\r\n                {(ShowRead)?\"\":<Translation/>}\r\n                {/* <Tooltip/> */}\r\n            </List>\r\n\r\n            <Divider/>\r\n            <List\r\n                subheader={<Typography style={{color: '#747474', marginLeft: \"16px\", paddingTop: 20}}><FormattedMessage\r\n                    id=\"FontSize\"/></Typography>}>\r\n                <div className=\"sidenavright-lower\">\r\n                    <div\r\n                        className=\"arabic-size arabictxt_size d-flex justify-content-between ml-4 mr-4 align-items-center\">\r\n                        {/* Arabic fontsize changer */}\r\n                        <FontSizeChanger\r\n                            targets={['.ArabicFontChange']}\r\n                            onChange={(element, newValue, oldValue) => {\r\n                               \r\n                                setArbicFontSize(newValue)\r\n                            }}\r\n                            options={{\r\n                                stepSize: 2,\r\n                                range:1000\r\n                            }}\r\n                            className=\"arabictxt_size\"\r\n                            customButtons={{\r\n                                down: <span > <i className=\"fas fa-minus\" style={color}></i> </span>,\r\n                            }}\r\n                        />\r\n                        <h6 style={color}><FormattedMessage id=\"Arabic\"/></h6>\r\n                        <FontSizeChanger\r\n                            targets={['.ArabicFontChange']}\r\n                            onChange={(element, newValue, oldValue) => {\r\n                                if(parseInt(newValue)>50) return;\r\n                                setArbicFontSize(newValue)\r\n                            }}\r\n                            options={{\r\n                                stepSize: 2,\r\n                                range: 1000\r\n                            }}\r\n                            className=\"arabictxt_size\"\r\n                            customButtons={{\r\n                                up: <span> <i className=\"fas fa-plus\" style={color}></i> </span>,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {/* TRANSLATIONS FONT SIZE CHANGER*/}\r\n                    <div\r\n                        className=\"arabic-size transtxt_size d-flex justify-content-between ml-4 mr-4 align-items-center\">\r\n                        <FontSizeChanger\r\n                            targets={['.TranslationFontChanger']}\r\n                            onChange={(element, newValue, oldValue) => {\r\n                                  setTransFont(newValue)\r\n                            }}\r\n                            options={{\r\n                                stepSize: 2,\r\n                                range: 1000\r\n                            }}\r\n                            className=\"transtxt_size\"\r\n                            customButtons={{\r\n                                down: <span>\r\n                                    <i className=\"fas fa-minus\" style={color}></i>\r\n                                </span>,\r\n                            }}\r\n                        />\r\n                        <h6 style={color}><FormattedMessage id=\"Translation\"/></h6>\r\n                        <FontSizeChanger\r\n                            targets={['.TranslationFontChanger']}\r\n                            onChange={(element, newValue, oldValue) => {\r\n                                setTransFont(newValue)\r\n                            }}\r\n                            options={{\r\n                                stepSize: 2,\r\n                                range: 1000\r\n                            }}\r\n                            className=\"transtxt_size\"\r\n                            customButtons={{\r\n                                up: <span>\r\n                                    <i className=\"fas fa-plus\" style={color}></i>\r\n                                </span>,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"NightM\">\r\n\r\n\r\n            <a className=\"btn \" onClick={toggleDrawer('right', true)}> <span\r\n                className=\"mobilehidesetting\"><FormattedMessage id=\"Settings\"/></span> <i className=\"fas fa-cog\"></i></a>\r\n\r\n            <Drawer transitionDuration={800} anchor=\"right\" open={Drawerstate.right}\r\n                    onClose={toggleDrawer('right', false)}\r\n            >\r\n\r\n                <div style={{cursor: \"pointer\"}}\r\n                     className=\"sidenavright-upper d-flex justify-content-between align-items-center NightM\"\r\n                     onClick={toggleDrawer('right', false)}>\r\n                    <h6><FormattedMessage id=\"Settings\"/></h6>\r\n                    <a\r\n                        className=\"closebtn\"\r\n                        id=\"sideNavTogglerInnerRight\"\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </a>\r\n                </div>\r\n         {sideList('right')}\r\n            </Drawer>\r\n\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}