{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\src\\\\DetailVersesFetcher.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Tooltip from \"react-simple-tooltip\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { SurahContext, CurrentPageContext, LastPageContext, endFlagContext, TranslitContext, ChosenVerseAndPageContext, ChosenVerseFlagContext, OffsetContext, LoadingContext, BismillahContext, URLContext, ArbicFontSizeContext, TranslationsLoaderContext, TopContext, DisabledContext, ReciterLoadingContext, TransFontChangeContext } from \"./Store\";\nimport \"./qfonts.css\";\nimport { Link } from \"react-router-dom\";\nimport { goToTop } from 'react-scrollable-anchor';\nimport { FormattedMessage } from \"react-intl\";\nimport '@cassette/player/dist/css/cassette-player.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { PlayerContextProvider } from '@cassette/core';\nimport { MediaPlayerControls } from '@cassette/player';\nimport { MediaProgress } from '@cassette/player';\nimport { RepeatButton } from '@cassette/player';\nimport { usePlayerContext } from '@cassette/hooks';\nimport { MuteButton } from '@cassette/player';\nimport { ForwardSkipButton } from '@cassette/player';\nimport { PlayPauseButton } from '@cassette/player';\nimport { Modal } from 'react-bootstrap';\nimport Sound from 'react-sound';\nimport Iframe from 'react-iframe';\nimport { FacebookShareButton, TwitterShareButton } from 'react-share';\nimport { Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\nimport ReactHtmlParser from 'react-html-parser';\n\nfunction Body(props) {\n  const _useContext = useContext(BismillahContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        Bism = _useContext2[0],\n        setBism = _useContext2[1];\n\n  const _useContext3 = useContext(LoadingContext),\n        _useContext4 = _slicedToArray(_useContext3, 2),\n        isLoading = _useContext4[0],\n        setLoading = _useContext4[1];\n\n  const _useContext5 = useContext(OffsetContext),\n        _useContext6 = _slicedToArray(_useContext5, 2),\n        offset = _useContext6[0],\n        setOff = _useContext6[1];\n\n  var arr = [];\n\n  const _useContext7 = useContext(endFlagContext),\n        _useContext8 = _slicedToArray(_useContext7, 2),\n        endFlag = _useContext8[0],\n        setFlag = _useContext8[1];\n\n  const _useContext9 = useContext(SurahContext),\n        _useContext10 = _slicedToArray(_useContext9, 2),\n        SurahNo = _useContext10[0],\n        setSurah = _useContext10[1];\n\n  const _useContext11 = useContext(CurrentPageContext),\n        _useContext12 = _slicedToArray(_useContext11, 2),\n        Currentpage = _useContext12[0],\n        setCurrentPage = _useContext12[1];\n\n  const _useContext13 = useContext(LastPageContext),\n        _useContext14 = _slicedToArray(_useContext13, 2),\n        lastPage = _useContext14[0],\n        setLast = _useContext14[1];\n\n  const _useContext15 = useContext(TranslitContext),\n        _useContext16 = _slicedToArray(_useContext15, 2),\n        TranslitShowing = _useContext16[0],\n        setTrans = _useContext16[1];\n\n  const _useContext17 = useContext(ChosenVerseAndPageContext),\n        _useContext18 = _slicedToArray(_useContext17, 2),\n        OffsetandPage = _useContext18[0],\n        setPageandOffset = _useContext18[1];\n\n  const _useContext19 = useContext(ChosenVerseFlagContext),\n        _useContext20 = _slicedToArray(_useContext19, 2),\n        isChosen = _useContext20[0],\n        setChosen = _useContext20[1];\n\n  const _useContext21 = useContext(URLContext),\n        _useContext22 = _slicedToArray(_useContext21, 2),\n        URL = _useContext22[0],\n        setURL = _useContext22[1];\n\n  const _useContext23 = useContext(TopContext),\n        _useContext24 = _slicedToArray(_useContext23, 2),\n        Top = _useContext24[0],\n        setTop = _useContext24[1];\n\n  const _useContext25 = useContext(ReciterLoadingContext),\n        _useContext26 = _slicedToArray(_useContext25, 2),\n        ReciterLoading = _useContext26[0],\n        setReciterLoading = _useContext26[1];\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        BayyinahIfram = _useState2[0],\n        setBayyinah = _useState2[1];\n\n  const _useState3 = useState(['']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Mp3File = _useState4[0],\n        setMp3File = _useState4[1];\n\n  const _useState5 = useState(props.audio),\n        _useState6 = _slicedToArray(_useState5, 2),\n        PlayList = _useState6[0],\n        setPlayList = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        VersePlay = _useState8[0],\n        setVersePlay = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        timer = _useState10[0],\n        setTimer = _useState10[1];\n\n  const _useState11 = useState(-1),\n        _useState12 = _slicedToArray(_useState11, 2),\n        currentVerseIndex = _useState12[0],\n        setCurrentVerseIndex = _useState12[1];\n\n  const _useContext27 = useContext(ArbicFontSizeContext),\n        _useContext28 = _slicedToArray(_useContext27, 2),\n        ArbicFontSize = _useContext28[0],\n        setArbicFontSize = _useContext28[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        playWord = _useState14[0],\n        setPlayWord = _useState14[1];\n\n  const _useContext29 = useContext(TranslationsLoaderContext),\n        _useContext30 = _slicedToArray(_useContext29, 2),\n        miniLoader = _useContext30[0],\n        setMiniLoader = _useContext30[1];\n\n  const _useContext31 = useContext(TransFontChangeContext),\n        _useContext32 = _slicedToArray(_useContext31, 2),\n        TransFontSize = _useContext32[0],\n        setTransFont = _useContext32[1]; //Encoder\n\n\n  const Entities = require('html-entities').AllHtmlEntities;\n\n  const entities = new Entities(); //FOR MODAL \n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        ModalStatus = _useState16[0],\n        setModal = _useState16[1];\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        MediaArray = _useState18[0],\n        setMediaArray = _useState18[1];\n\n  const _useState19 = useState(),\n        _useState20 = _slicedToArray(_useState19, 2),\n        LittleID = _useState20[0],\n        setModalID = _useState20[1];\n\n  const _useState21 = useState(\"\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        Copied = _useState22[0],\n        setCopiedState = _useState22[1];\n\n  const _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        CopiedButton = _useState24[0],\n        setCopiedButton = _useState24[1]; //For DIsabling buttons\n\n\n  const _useContext33 = useContext(DisabledContext),\n        _useContext34 = _slicedToArray(_useContext33, 2),\n        Disabled = _useContext34[0],\n        setDisabled = _useContext34[1];\n\n  useEffect(() => {\n    if (isChosen) {\n      setCurrentPage(OffsetandPage.Chosenpage);\n      setOff(OffsetandPage.offset);\n      setLoading(true);\n    }\n  }, [OffsetandPage]);\n\n  const changepage = () => {\n    if (Currentpage !== lastPage) {\n      setCurrentPage(Currentpage + 1);\n      setTop(false);\n    }\n\n    if (Currentpage === lastPage) {\n      setFlag(false);\n    }\n  };\n\n  const handleClick = ID => {\n    setModal(true);\n    setModalID(ID);\n  }; //Function to play word mp3\n  //Faisal Mehmood [9-17-2019]\n\n\n  const playWordAudio = word => {\n    setMp3File(word.audio_url + '?_t=' + new Date());\n    setPlayWord(1);\n  };\n\n  function onFinishedPlayingWord(e) {\n    setPlayWord(0);\n  }\n\n  function PlayerContextUser(props) {\n    const _usePlayerContext = usePlayerContext(['activeTrackIndex', 'paused', 'onTogglePause', 'selectTrackIndex', 'onSelectTrackIndex']),\n          activeTrackIndex = _usePlayerContext.activeTrackIndex,\n          paused = _usePlayerContext.paused,\n          onTogglePause = _usePlayerContext.onTogglePause,\n          selectTrackIndex = _usePlayerContext.selectTrackIndex,\n          onSelectTrackIndex = _usePlayerContext.onSelectTrackIndex;\n\n    function playVerse(trackIndex) {\n      onSelectTrackIndex(trackIndex);\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, activeTrackIndex == props.trackIndex && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, paused && React.createElement(\"a\", {\n      className: \"cursor-pointer\",\n      onClick: () => onTogglePause(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"Play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), !paused && React.createElement(\"a\", {\n      className: \"cursor-pointer\",\n      onClick: () => onTogglePause(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \" \", React.createElement(FormattedMessage, {\n      id: \"Pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })))), activeTrackIndex != props.trackIndex && React.createElement(\"a\", {\n      className: \"cursor-pointer\",\n      onClick: () => playVerse(props.trackIndex),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), \" \", React.createElement(FormattedMessage, {\n      id: \"Play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })));\n  }\n\n  function updateTimer(e) {\n    setVersePlay(1);\n    setTimer(Math.ceil(e.currentTime * 1000));\n    setCurrentVerseIndex(e.trackIndex);\n  }\n\n  function activeTrackUpdate(e) {\n    if (e.trackIndex === 0 && VersePlay == 1) {\n      scroll.scrollToTop();\n    } else scrollTo(e.trackIndex);\n  }\n\n  function getSegment(arr, index, childIndex) {\n    if (arr[index] != undefined) return arr[index][childIndex];\n  }\n\n  function GetVerse(props) {\n    let words = [];\n    props.mem.words.forEach(function myFunction(member, ind) {\n      if (member.chartype.name === 'word' || member.chartype.name === 'end') {\n        words.push(member);\n      }\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-right\",\n      dir: \"rtl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, words.map(function (member, ind) {\n      return React.createElement(Tooltip, {\n        key: \"Audio_\".concat(ind),\n        className: \"tooltipmaindiv\",\n        content: member.translation ? member.translation.translation.text : member.chartype.name === \"end\" ? \"Verse \" + props.mem.verse_number : member.chartype.name,\n        background: \"#000\",\n        fontSize: \"12px\",\n        padding: 11,\n        fadeEasing: \"linear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        className: getSegment(props.mem.audio.segments, ind, 2) < timer && getSegment(props.mem.audio.segments, ind, 3) > timer && currentVerseIndex == props.versekey ? \"pointer ArabicFontChange \" + member.class_name + \" highlight-word-on-play\" : \"pointer ArabicFontChange \" + member.class_name,\n        onClick: () => playWordAudio(member),\n        style: {\n          'fontSize': ArbicFontSize + \"px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, entities.decode(member.code_hex)));\n    })));\n  }\n\n  function scrollTo(to) {\n    if (to != 0) scroller.scrollTo(\"verse-index\" + to, {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart',\n      offset: -200\n    });\n  }\n\n  function copiedButtonAnim() {\n    setCopiedButton(true);\n    setTimeout(() => {\n      setCopiedButton(false);\n    }, 2000);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(PlayerContextProvider, {\n    playlist: props.audio,\n    onTimeUpdate: e => updateTimer(e),\n    onActiveTrackUpdate: e => activeTrackUpdate(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    className: \"detailmain mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(InfiniteScroll, {\n    dataLength: Array.isArray(props.data) ? props.data.length : 0,\n    next: changepage,\n    hasMore: ReciterLoading ? false : endFlag,\n    loader: React.createElement(\"div\", {\n      className: \"wraper_laader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ayatboxouter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, Bism && React.createElement(\"div\", {\n    className: \"p1 bism \",\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"\\uFB51\\uFB52\\uFB53\\uFB54\"), Array.isArray(props.data) ? props.data.map((mem, key) => React.createElement(\"div\", {\n    key: \"Verse_\".concat(key),\n    className: currentVerseIndex == key && VersePlay ? 'row playing-verse-container' : 'row',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-3 col-sm-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ayatrefbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ref\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ref-group d-flex justify-content-center align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, mem.verse_key)), React.createElement(\"div\", {\n    className: \"plycpy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"plycpy-group text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(PlayerContextUser, {\n    trackIndex: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }), React.createElement(CopyToClipboard, {\n    text: \"\".concat(mem.verse_key, \" - \").concat(mem.text_madani),\n    onCopy: () => {\n      copiedButtonAnim();\n      setCopiedState(mem.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"cursor-pointer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"cursor-pointer\",\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-paperclip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }), Copied === mem.id && CopiedButton ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, \"  \", React.createElement(FormattedMessage, {\n    id: \"Copied\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, \"  \", React.createElement(FormattedMessage, {\n    id: \"Copy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }))))))), React.createElement(\"div\", {\n    className: \"social\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"social-group d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(FacebookShareButton, {\n    url: \"http://18.189.100.203\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    className: \"facustomfacebook\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-facebook-f fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }))), React.createElement(TwitterShareButton, {\n    url: \"http://18.189.100.203\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    className: \"facustomtwitter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-twitter fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }))))))), React.createElement(\"div\", {\n    className: \"col-9 col-sm-11\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ayatbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, React.createElement(Element, {\n    name: \"verse-index\" + key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }), currentVerseIndex != key && React.createElement(\"h1\", {\n    className: \"text-right\",\n    dir: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, mem.words.map((member, ind) => TranslitShowing ? React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n    key: \"Word_\".concat(ind),\n    className: \"tooltipmaindiv\",\n    content: member.transliteration ? member.transliteration.transliteration.text : \"Verse \" + mem.verse_number //  (mem.words.length=== index + 1)?\n    ,\n    background: \"#000\",\n    fontSize: \"12px\",\n    padding: 11,\n    fadeEasing: \"linear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"pointer ArabicFontChange \" + member.class_name + \" \" + mem.verse_number,\n    style: {\n      'fontSize': ArbicFontSize + \"px\"\n    },\n    onClick: () => playWordAudio(member),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, entities.decode(member.code_hex)))) : React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n    key: \"Word_\".concat(ind),\n    className: \"tooltipmaindiv\",\n    content: member.translation ? member.translation.translation.text : member.chartype.name === \"end\" ? \"Verse \" + mem.verse_number : member.chartype.name,\n    background: \"#000\",\n    fontSize: \"12px\",\n    padding: 11,\n    fadeEasing: \"linear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"pointer ArabicFontChange \" + member.class_name + \" \" + mem.verse_number + \"test\",\n    style: {\n      'fontSize': ArbicFontSize + \"px\",\n      'lineHeight': ArbicFontSize / 30\n    },\n    onClick: () => playWordAudio(member),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, entities.decode(member.code_hex)))))), currentVerseIndex == key && VersePlay && React.createElement(GetVerse, {\n    mem: mem,\n    versekey: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }), Array.isArray(mem.translations) ? mem.translations.map((trans, i) => React.createElement(\"div\", {\n    key: \"Translation_\".concat(i),\n    className: \"translation-box TranslationFontChanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"translator_name\",\n    style: {\n      'fontSize': TransFontSize + \"px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, trans.resource_name), React.createElement(\"p\", {\n    style: {\n      'fontSize': TransFontSize + \"px\",\n      'lineHeight': TransFontSize / 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, ReactHtmlParser(trans.text)))) : '', SurahNo == 1 ? React.createElement(\"span\", {\n    className: \"bayyinah\",\n    onClick: () => {\n      handleClick(key);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, \"Watch lecture by Bayyinah\", React.createElement(\"span\", {\n    style: {\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, mem.media_contents !== null ? arr.push(mem.media_contents.url) : \"\")) : \"\", miniLoader ? React.createElement(\"div\", {\n    className: \"wraper_laader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loader loadersmall\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  })) : \"\", React.createElement(Modal, {\n    className: \"popupmodal_bayan\",\n    centered: true,\n    size: \"lg\",\n    show: ModalStatus,\n    onHide: () => setModal(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, \"Bayyinah\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, React.createElement(Iframe, {\n    url: arr[LittleID],\n    width: \"100%\",\n    height: \"450px\",\n    position: \"relative\",\n    allowFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  })))))) : \"\"))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }), !endFlag && React.createElement(\"div\", {\n    className: \"container mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"next-previous-surah d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  }, SurahNo != 1 ? React.createElement(Link, {\n    to: \"/\".concat(SurahNo - 1),\n    onClick: () => {\n      setSurah(SurahNo - 1);\n      setLoading(true);\n      setCurrentPage(1);\n      setOff(1);\n      setLast(0);\n      setDisabled(true);\n      setTimeout(function () {\n        setDisabled(false);\n      }, 7000);\n    },\n    className: \"btn btn-outline-primary btn-lg prev_btn_btm \".concat(Disabled ? \"disabled\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"PreviousSurah\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511\n    },\n    __self: this\n  }), \" \", React.createElement(\"i\", {\n    className: \"fas fa-arrow-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512\n    },\n    __self: this\n  })) : \"\", React.createElement(Link, {\n    to: \"/\".concat(SurahNo),\n    onClick: () => {\n      goToTop();\n    },\n    className: \"btn btn-outline-primary btn-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"BeginningofSurah\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519\n    },\n    __self: this\n  })), SurahNo != 114 ? React.createElement(Link, {\n    to: \"/\".concat(parseInt(SurahNo) + 1),\n    onClick: () => {\n      setSurah(parseInt(SurahNo) + 1);\n      setLoading(true);\n      setCurrentPage(1);\n      setOff(1);\n      setLast(0);\n      setDisabled(true);\n      setTimeout(function () {\n        setDisabled(false);\n      }, 7000);\n    },\n    className: \"btn btn-outline-primary btn-lg next_btn_btm\\n                                \".concat(Disabled ? \"disabled\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"NextSurah\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fas fa-arrow-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539\n    },\n    __self: this\n  })) : \"\"))), VersePlay && React.createElement(MediaPlayerControls, {\n    controls: ['spacer', 'backskip', 'playpause', 'forwardskip', 'spacer', 'progress', 'repeat'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548\n    },\n    __self: this\n  })), Mp3File != '' && React.createElement(Sound, {\n    url: Mp3File ? Mp3File : '',\n    playStatus: playWord == 1 ? Sound.status.PLAYING : Sound.status.STOPPED,\n    onFinishedPlaying: e => onFinishedPlayingWord(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558\n    },\n    __self: this\n  }));\n}\n\nexport default Body;","map":{"version":3,"sources":["C:\\Users\\Hp\\Desktop\\IslamCheck\\src\\DetailVersesFetcher.js"],"names":["React","useEffect","useState","useContext","Tooltip","InfiniteScroll","SurahContext","CurrentPageContext","LastPageContext","endFlagContext","TranslitContext","ChosenVerseAndPageContext","ChosenVerseFlagContext","OffsetContext","LoadingContext","BismillahContext","URLContext","ArbicFontSizeContext","TranslationsLoaderContext","TopContext","DisabledContext","ReciterLoadingContext","TransFontChangeContext","Link","goToTop","FormattedMessage","CopyToClipboard","PlayerContextProvider","MediaPlayerControls","MediaProgress","RepeatButton","usePlayerContext","MuteButton","ForwardSkipButton","PlayPauseButton","Modal","Sound","Iframe","FacebookShareButton","TwitterShareButton","Element","Events","animateScroll","scroll","scrollSpy","scroller","ReactHtmlParser","Body","props","Bism","setBism","isLoading","setLoading","offset","setOff","arr","endFlag","setFlag","SurahNo","setSurah","Currentpage","setCurrentPage","lastPage","setLast","TranslitShowing","setTrans","OffsetandPage","setPageandOffset","isChosen","setChosen","URL","setURL","Top","setTop","ReciterLoading","setReciterLoading","BayyinahIfram","setBayyinah","Mp3File","setMp3File","audio","PlayList","setPlayList","VersePlay","setVersePlay","timer","setTimer","currentVerseIndex","setCurrentVerseIndex","ArbicFontSize","setArbicFontSize","playWord","setPlayWord","miniLoader","setMiniLoader","TransFontSize","setTransFont","Entities","require","AllHtmlEntities","entities","ModalStatus","setModal","MediaArray","setMediaArray","LittleID","setModalID","Copied","setCopiedState","CopiedButton","setCopiedButton","Disabled","setDisabled","Chosenpage","changepage","handleClick","ID","playWordAudio","word","audio_url","Date","onFinishedPlayingWord","e","PlayerContextUser","activeTrackIndex","paused","onTogglePause","selectTrackIndex","onSelectTrackIndex","playVerse","trackIndex","updateTimer","Math","ceil","currentTime","activeTrackUpdate","scrollToTop","scrollTo","getSegment","index","childIndex","undefined","GetVerse","words","mem","forEach","myFunction","member","ind","chartype","name","push","map","translation","text","verse_number","segments","versekey","class_name","decode","code_hex","to","duration","delay","smooth","copiedButtonAnim","setTimeout","Array","isArray","data","length","textAlign","key","verse_key","text_madani","id","transliteration","translations","trans","i","resource_name","display","media_contents","url","parseInt","status","PLAYING","STOPPED"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext} from \"react\";\r\nimport Tooltip from \"react-simple-tooltip\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {\r\n    SurahContext, CurrentPageContext, LastPageContext, endFlagContext, TranslitContext, ChosenVerseAndPageContext\r\n    , ChosenVerseFlagContext, OffsetContext, LoadingContext, BismillahContext, URLContext, ArbicFontSizeContext,\r\n    TranslationsLoaderContext, TopContext, DisabledContext,ReciterLoadingContext,TransFontChangeContext\r\n} from \"./Store\";\r\nimport \"./qfonts.css\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {goToTop} from 'react-scrollable-anchor'\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport '@cassette/player/dist/css/cassette-player.css';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {PlayerContextProvider} from '@cassette/core';\r\nimport {MediaPlayerControls} from '@cassette/player';\r\nimport {MediaProgress} from '@cassette/player';\r\nimport {RepeatButton} from '@cassette/player';\r\nimport {usePlayerContext} from '@cassette/hooks';\r\nimport {MuteButton} from '@cassette/player';\r\nimport {ForwardSkipButton} from '@cassette/player';\r\nimport {PlayPauseButton} from '@cassette/player';\r\nimport {Modal} from 'react-bootstrap';\r\nimport Sound from 'react-sound';\r\nimport Iframe from 'react-iframe'\r\nimport {FacebookShareButton, TwitterShareButton} from 'react-share';\r\nimport {Element, Events, animateScroll as scroll, scrollSpy, scroller} from 'react-scroll'\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nfunction Body(props) {\r\n    const [Bism, setBism] = useContext(BismillahContext);\r\n    const [isLoading, setLoading] = useContext(LoadingContext);\r\n    const [offset, setOff] = useContext(OffsetContext);\r\n    var arr = [];\r\n    const [endFlag, setFlag] = useContext(endFlagContext);\r\n    const [SurahNo, setSurah] = useContext(SurahContext);\r\n    const [Currentpage, setCurrentPage] = useContext(CurrentPageContext);\r\n    const [lastPage, setLast] = useContext(LastPageContext);\r\n    const [TranslitShowing, setTrans] = useContext(TranslitContext);\r\n    const [OffsetandPage, setPageandOffset] = useContext(ChosenVerseAndPageContext);\r\n    const [isChosen, setChosen] = useContext(ChosenVerseFlagContext);\r\n    const [URL, setURL] = useContext(URLContext);\r\n    const [Top, setTop] = useContext(TopContext);\r\n    const [ReciterLoading, setReciterLoading] = useContext(ReciterLoadingContext);\r\n    const [BayyinahIfram, setBayyinah]=useState(\"\");\r\n\r\n    const [Mp3File, setMp3File] = useState(['']);\r\n    const [PlayList, setPlayList] = useState(props.audio);\r\n    const [VersePlay, setVersePlay] = useState(false);\r\n    const [timer, setTimer] = useState('');\r\n    const [currentVerseIndex, setCurrentVerseIndex] = useState(-1);\r\n    const [ArbicFontSize, setArbicFontSize] = useContext(ArbicFontSizeContext);\r\n    const [playWord, setPlayWord] = useState(0);\r\n\r\n    const [miniLoader, setMiniLoader] = useContext(TranslationsLoaderContext);\r\n    const [TransFontSize, setTransFont] = useContext(TransFontChangeContext);\r\n\r\n//Encoder\r\n    const Entities = require('html-entities').AllHtmlEntities;\r\n\r\n    const entities = new Entities();\r\n//FOR MODAL \r\n    const [ModalStatus, setModal] = useState(false);\r\n    const [MediaArray, setMediaArray] = useState([]);\r\n    const [LittleID, setModalID] = useState();\r\n    const [Copied, setCopiedState] = useState(\"\");\r\n    const [CopiedButton,setCopiedButton] = useState(false);\r\n\r\n    //For DIsabling buttons\r\n    const [Disabled, setDisabled] = useContext(DisabledContext);\r\n\r\n\r\n    useEffect(() => {\r\n        if (isChosen) {\r\n\r\n            setCurrentPage(OffsetandPage.Chosenpage);\r\n            setOff(OffsetandPage.offset);\r\n            setLoading(true);\r\n        }\r\n\r\n\r\n    }, [OffsetandPage]);\r\n\r\n    const changepage = () => {\r\n\r\n        if (Currentpage !== lastPage) {\r\n            setCurrentPage(Currentpage + 1);\r\n            \r\n            setTop(false);\r\n\r\n        }\r\n\r\n        if (Currentpage === lastPage) {\r\n  \r\n            setFlag(false)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (ID) => {\r\n     \r\n        setModal(true);\r\n        setModalID(ID);\r\n    }\r\n\r\n    //Function to play word mp3\r\n    //Faisal Mehmood [9-17-2019]\r\n    const playWordAudio = (word) => {\r\n        setMp3File(word.audio_url + '?_t=' + new Date());\r\n        setPlayWord(1)\r\n    }\r\n\r\n    function onFinishedPlayingWord(e) {\r\n        setPlayWord(0)\r\n    }\r\n\r\n\r\n    function PlayerContextUser(props) {\r\n        const {\r\n            activeTrackIndex,\r\n            paused,\r\n            onTogglePause,\r\n            selectTrackIndex,\r\n            onSelectTrackIndex\r\n        } = usePlayerContext([\r\n            'activeTrackIndex',\r\n            'paused',\r\n            'onTogglePause',\r\n            'selectTrackIndex',\r\n            'onSelectTrackIndex'\r\n        ]);\r\n\r\n\r\n        function playVerse(trackIndex) {\r\n            onSelectTrackIndex(trackIndex);\r\n        }\r\n\r\n\r\n        return (\r\n            <React.Fragment >\r\n                {(activeTrackIndex == props.trackIndex) && (\r\n                    <span>\r\n                        {(paused) && (\r\n                            <a className=\"cursor-pointer\" onClick={() => onTogglePause()}>\r\n                                <i className=\"fas fa-play\"></i> <span><FormattedMessage id=\"Play\"/>\r\n                                </span>\r\n                            </a>\r\n                        )}\r\n                        {(!paused) && (\r\n                            <a className=\"cursor-pointer\" onClick={() => onTogglePause()}>\r\n                                <i className=\"fas fa-pause\"></i>\r\n                                <span> <FormattedMessage id=\"Pause\"/>\r\n                                </span>\r\n                            </a>\r\n                        )}\r\n                    </span>\r\n\r\n\r\n                )}\r\n\r\n                {(activeTrackIndex != props.trackIndex) && (\r\n                    <a className=\"cursor-pointer\" onClick={() => playVerse(props.trackIndex)}>\r\n                        <i className=\"fas fa-play\"></i> <FormattedMessage id=\"Play\"/>\r\n                    </a>\r\n                )}\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    function updateTimer(e) {\r\n        setVersePlay(1);\r\n        setTimer(Math.ceil(e.currentTime * 1000));\r\n        setCurrentVerseIndex(e.trackIndex);\r\n    }\r\n\r\n    function activeTrackUpdate(e) {\r\n    \r\n\r\n        if (e.trackIndex === 0 && VersePlay==1)\r\n      { \r\n      \r\n            scroll.scrollToTop();\r\n        }\r\n        else\r\n            scrollTo(e.trackIndex)\r\n    }\r\n\r\n    function getSegment(arr, index, childIndex) {\r\n\r\n        if (arr[index] != undefined)\r\n            return arr[index][childIndex];\r\n\r\n    }\r\n\r\n    function GetVerse(props) {\r\n        let words = [];\r\n\r\n        props.mem.words.forEach(function myFunction(member, ind) {\r\n            if (member.chartype.name === 'word' || member.chartype.name === 'end') {\r\n                words.push(member)\r\n            }\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"text-right\" dir=\"rtl\">\r\n                    {words.map(function (member, ind) {\r\n                        return (\r\n                            <Tooltip key={`Audio_${ind}`} className=\"tooltipmaindiv\"\r\n                                     content={\r\n                                         (member.translation) ? member.translation.translation.text :\r\n                                             (member.chartype.name === \"end\") ? \"Verse \" + props.mem.verse_number : member.chartype.name\r\n                                     }\r\n                                     background=\"#000\"\r\n                                     fontSize=\"12px\"\r\n                                     padding={11}\r\n                                     fadeEasing=\"linear\">\r\n\r\n                                <b className={(getSegment(props.mem.audio.segments, ind, 2) < timer) && (getSegment(props.mem.audio.segments, ind, 3) > timer) && currentVerseIndex == props.versekey ? \"pointer ArabicFontChange \" + member.class_name + \" highlight-word-on-play\" : \"pointer ArabicFontChange \" + member.class_name}\r\n                                   onClick={() => playWordAudio(member)}\r\n                                   style={{'fontSize': ArbicFontSize+\"px\"}}\r\n                                >\r\n                                    {entities.decode(member.code_hex)}\r\n                                </b>\r\n\r\n\r\n                            </Tooltip>\r\n\r\n                        )\r\n\r\n                    })}\r\n\r\n                </h1>\r\n                </React.Fragment>\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n    function scrollTo(to) {\r\n\r\n        if (to != 0)\r\n\r\n            scroller.scrollTo(\"verse-index\" + to, {\r\n                duration: 800,\r\n                delay: 0,\r\n                smooth: 'easeInOutQuart',\r\n                offset: -200\r\n            })\r\n    }\r\n\r\n    function copiedButtonAnim(){\r\n        setCopiedButton(true);\r\n        setTimeout(()=>{setCopiedButton(false)},2000);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n        \r\n            <PlayerContextProvider\r\n                playlist={props.audio}\r\n                onTimeUpdate={(e) => updateTimer(e)}\r\n                onActiveTrackUpdate={(e) => activeTrackUpdate(e)}\r\n            >\r\n                <main className=\"detailmain mt-5\">\r\n                    <InfiniteScroll\r\n                        dataLength={Array.isArray(props.data) ? props.data.length : 0}\r\n                        next={changepage}\r\n                        hasMore={(ReciterLoading)? false: endFlag}\r\n\r\n                        loader={\r\n                            <div className=\"wraper_laader\">\r\n                                <div className=\"loader\"></div>\r\n                            </div>}\r\n                    >\r\n                        <div className=\"container\">\r\n                            <div className=\"ayatboxouter\">\r\n\r\n                                {Bism && <div className={\"p1 bism \"} style={{textAlign: \"center\"}}>\r\n                                    ﭑﭒﭓﭔ</div>}\r\n\r\n                               \r\n                                {Array.isArray(props.data) ? props.data.map((mem, key) =>\r\n\r\n                                        <div key={`Verse_${key}`}\r\n                                       \r\n                                             className={currentVerseIndex == key && VersePlay ? 'row playing-verse-container' : 'row'}>\r\n\r\n                                            <div className=\"col-3 col-sm-1\">\r\n\r\n                                                <div className=\"ayatrefbox\">\r\n                                                    <div className=\"ref\">\r\n                                                        <div\r\n                                                            className=\"ref-group d-flex justify-content-center align-items-center\">\r\n                                                            {mem.verse_key}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"plycpy\">\r\n                                                        <div className=\"plycpy-group text-center\">\r\n\r\n                                                            <PlayerContextUser trackIndex={key}/>\r\n\r\n                                                            <br/>\r\n\r\n                                                            <CopyToClipboard text={`${mem.verse_key} - ${mem.text_madani}`}\r\n                                                                             onCopy={() => {copiedButtonAnim(); setCopiedState(mem.id);}}>\r\n\r\n                                                                <span className='cursor-pointer'>\r\n                                                                <a className=\"cursor-pointer\" onClick={() => {}}>\r\n                                                                    <i className=\"fas fa-paperclip\"></i>\r\n                                                                \r\n                                                                    {\r\n                                                                        (Copied === mem.id && CopiedButton) ?\r\n                                                                            <span>  <FormattedMessage id=\"Copied\"/></span> :\r\n                                                                            <span>  <FormattedMessage id=\"Copy\"/>\r\n                                                               </span>}\r\n                                                               </a>\r\n                                                                </span>\r\n                                                                {/*  */}\r\n                                                            </CopyToClipboard>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"social\">\r\n\r\n\r\n                                                        <div className=\"social-group d-flex justify-content-between\">\r\n                                                            <FacebookShareButton url=\"http://18.189.100.203\">\r\n                                                                <a href=\"\" className=\"facustomfacebook\">\r\n                                                                    <i className=\"fab fa-facebook-f fa-lg\"></i>\r\n                                                                </a>\r\n                                                            </FacebookShareButton>\r\n                                                            <TwitterShareButton url=\"http://18.189.100.203\">\r\n                                                                <a href=\"\" className=\"facustomtwitter\">\r\n                                                                    <i className=\"fab fa-twitter fa-lg\"></i>\r\n                                                                </a>\r\n                                                            </TwitterShareButton>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-9 col-sm-11\">\r\n                                                <div className=\"ayatbox\">\r\n\r\n                                                    <Element name={\"verse-index\" + key}>\r\n                                                    </Element>\r\n\r\n                                                    {(currentVerseIndex != key) && (\r\n                                                        <h1 className=\"text-right\" dir=\"rtl\">\r\n\r\n\r\n                                                            {mem.words.map((member, ind) =>\r\n\r\n                                                                (TranslitShowing) ?\r\n                                                                    <>\r\n\r\n                                                                        <Tooltip  key={`Word_${ind}`}className=\"tooltipmaindiv\"\r\n                                                                                 content={\r\n                                                                                     (member.transliteration) ? member.transliteration.transliteration.text :\r\n                                                                                         \"Verse \" + mem.verse_number\r\n                                                                                 }\r\n                                                                            //  (mem.words.length=== index + 1)?\r\n                                                                                 background=\"#000\"\r\n                                                                                 fontSize=\"12px\"\r\n                                                                                 padding={11}\r\n                                                                                 fadeEasing=\"linear\"\r\n                                             \r\n                                                                        >\r\n\r\n                                                                            <b className={\"pointer ArabicFontChange \" + member.class_name + \" \" + mem.verse_number}\r\n                                                                               style={{'fontSize': ArbicFontSize+\"px\"}}\r\n                                                                               onClick={() => playWordAudio(member)}\r\n                                                                            >\r\n                                                                                {entities.decode(member.code_hex)}\r\n                                                                            </b>\r\n\r\n\r\n                                                                        </Tooltip>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    <>\r\n\r\n\r\n                                                                        <Tooltip key={`Word_${ind}`} className=\"tooltipmaindiv\"\r\n                                                                                 content={\r\n                                                                                     (member.translation) ? member.translation.translation.text :\r\n                                                                                         (member.chartype.name === \"end\") ? \"Verse \" + mem.verse_number : member.chartype.name\r\n                                                                                 }\r\n                                                                                 background=\"#000\"\r\n                                                                                 fontSize=\"12px\"\r\n                                                                                 padding={11}\r\n                                                                                 fadeEasing=\"linear\"\r\n                                                                                 \r\n\r\n                                                                        >\r\n                                                                            <b\r\n                                                                                className={\"pointer ArabicFontChange \" + member.class_name + \" \" + mem.verse_number+\"test\"}\r\n                                                                                style={{'fontSize': ArbicFontSize+\"px\", 'lineHeight':ArbicFontSize/30}}\r\n                                                                                onClick={() => playWordAudio(member)}\r\n                                                                            >\r\n\r\n                                                                                {entities.decode(member.code_hex)}\r\n                                                                            </b>\r\n\r\n\r\n                                                                        </Tooltip>\r\n\r\n                                                                    </>\r\n                                                            )}\r\n                                                        </h1>\r\n                                                    )}\r\n\r\n\r\n                                                    {(currentVerseIndex == key && VersePlay) && (\r\n                                                        <GetVerse mem={mem} versekey={key}/>\r\n                                                    )}\r\n\r\n                                                    {/* FETCH TRANSLATIONS */}\r\n                                                    {Array.isArray(mem.translations) ? mem.translations.map((trans, i) =>\r\n                                                            <div  key={`Translation_${i}`} className=\"translation-box TranslationFontChanger\">\r\n                                                                <span className=\"translator_name\" style={{\r\n                                                                        'fontSize': TransFontSize+\"px\"}}\r\n                                                                       >\r\n                                                                     {trans.resource_name}</span>\r\n                                                                <p style={{\r\n                                                                        'fontSize': TransFontSize+\"px\",\r\n                                                                       'lineHeight': TransFontSize/10\r\n                                                                   }}>\r\n                                                                    {ReactHtmlParser(trans.text)}\r\n                                                                   \r\n                                                                </p>\r\n                                                            </div>)\r\n                                                        : ''}\r\n                                                        \r\n\r\n\r\n                                                    {(SurahNo == 1) ?\r\n\r\n                                                        <span \r\n                                                           className=\"bayyinah\"\r\n\r\n                                                           onClick={() => {\r\n                                                               handleClick(key)\r\n                                                           }}>\r\n                                                            Watch lecture by Bayyinah\r\n                                                    <span style={{display: \"none\"}}>{(mem.media_contents !== null) ? arr.push(mem.media_contents.url) : \"\"}\r\n                                                            </span>\r\n                                                        </span>\r\n                                                        : \"\"}\r\n                                                      \r\n                                                    {/* MINILOADER WHEN TRANSLATIONS CHECKED */}\r\n                                                    {(miniLoader) ?\r\n                                                        <div className=\"wraper_laader\">\r\n                                                            <div className=\"loader loadersmall\"></div>\r\n                                                        </div> : \"\"}\r\n\r\n                                                    <Modal className=\"popupmodal_bayan\" centered size=\"lg\" show={ModalStatus}\r\n                                                           onHide={() => setModal(false)}>\r\n                                                        <Modal.Header closeButton>\r\n                                                            <Modal.Title>Bayyinah</Modal.Title>\r\n                                                        </Modal.Header>\r\n                                                        <Modal.Body>\r\n\r\n                                                           \r\n                                                                <Iframe url={arr[LittleID]}\r\n                                                                        width=\"100%\"\r\n                                                                        height=\"450px\"\r\n                                                                        position=\"relative\"\r\n                                                                        allowFullScreen\r\n                                                                        />\r\n\r\n                                                        </Modal.Body>\r\n                                                        <Modal.Footer>\r\n\r\n                                                        </Modal.Footer>\r\n                                                    </Modal>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>) :\r\n                                    \"\"}\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </InfiniteScroll>\r\n                    <hr/>\r\n                   {!endFlag && <div className=\"container mb-5\">\r\n                        <div className=\"next-previous-surah d-flex justify-content-between align-items-center\">\r\n                            {(SurahNo != 1) ?\r\n                                <Link to={`/${SurahNo - 1}`} onClick={() => {\r\n                                    setSurah(SurahNo - 1);\r\n                                    setLoading(true);\r\n                                    setCurrentPage(1);\r\n                                    setOff(1);\r\n                                    setLast(0);\r\n                                    setDisabled(true);\r\n                                    setTimeout(function () {\r\n                                        setDisabled(false);\r\n                                    }, 7000)\r\n                                }}\r\n\r\n                                      className={`btn btn-outline-primary btn-lg prev_btn_btm ${(Disabled) ? \"disabled\" : \"\"}`}>\r\n\r\n                                    <FormattedMessage\r\n                                        id=\"PreviousSurah\"/> <i\r\n                                    className=\"fas fa-arrow-left\"></i>\r\n                                </Link>\r\n                                : \"\"}\r\n\r\n                            <Link to={`/${SurahNo}`} onClick={() => {\r\n                                goToTop()\r\n                            }} className=\"btn btn-outline-primary btn-lg\"><FormattedMessage id=\"BeginningofSurah\"/>\r\n                            </Link>\r\n                            {(SurahNo != 114) ?\r\n\r\n                                <Link to={`/${parseInt(SurahNo) + 1}`} onClick={() => {\r\n                                    setSurah(parseInt(SurahNo) + 1);\r\n                                    setLoading(true);\r\n                                    setCurrentPage(1);\r\n                                    setOff(1);\r\n                                    setLast(0);\r\n                                    setDisabled(true);\r\n                                    setTimeout(function () {\r\n                                        setDisabled(false);\r\n\r\n                                    }, 7000)\r\n\r\n                                }}\r\n                                      className={`btn btn-outline-primary btn-lg next_btn_btm\r\n                                ${(Disabled) ? \"disabled\" : \"\"}`}>\r\n                                    <FormattedMessage id=\"NextSurah\"/>\r\n                                    <i className=\"fas fa-arrow-right\"></i>\r\n                                </Link>\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>}\r\n                </main>\r\n\r\n\r\n                {(VersePlay) && (\r\n                    <MediaPlayerControls\r\n                        controls={['spacer', 'backskip', 'playpause', 'forwardskip', 'spacer', 'progress', 'repeat']}\r\n                    />\r\n                )}\r\n\r\n\r\n            </PlayerContextProvider>\r\n\r\n\r\n            {(Mp3File != '') && (\r\n                <Sound\r\n                    url={(Mp3File) ? Mp3File : ''}\r\n                    playStatus={(playWord == 1) ? Sound.status.PLAYING : Sound.status.STOPPED}\r\n                    onFinishedPlaying={(e) => onFinishedPlayingWord(e)}\r\n\r\n                />\r\n            )}\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}