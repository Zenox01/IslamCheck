{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\src\\\\Settings-Translations.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { CheckedContext, URLContext, TranslationsLoaderContext } from \"./Store\";\nimport { FormattedMessage } from \"react-intl\";\nimport Divider from '@material-ui/core/Divider';\nimport arraySort from \"array-sort\";\nimport { async } from 'q';\nconst color = {\n  color: '#ABABAB'\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\nexport default function NestedList() {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState({\n    translations: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Translators = _useState4[0],\n        setTranslators = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        Reload = _useState6[0],\n        setReloadflag = _useState6[1];\n\n  const _useContext = useContext(TranslationsLoaderContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        miniLoader = _useContext2[0],\n        setMiniLoader = _useContext2[1];\n\n  var arr = []; //cHECKBOXES\n\n  const _useContext3 = useContext(CheckedContext),\n        _useContext4 = _slicedToArray(_useContext3, 2),\n        check = _useContext4[0],\n        setCheck = _useContext4[1];\n\n  const _useContext5 = useContext(URLContext),\n        _useContext6 = _slicedToArray(_useContext5, 2),\n        URL = _useContext6[0],\n        setURL = _useContext6[1];\n\n  const handleChange = ID => event => {\n    if (ID !== null) {\n      setCheck(_objectSpread({}, check, {\n        [ID]: event.target.checked\n      }));\n      setMiniLoader(true);\n    }\n  };\n\n  const RemoveAll = () => {\n    setCheck({\n      20: true\n    });\n    setMiniLoader(true);\n    setReloadflag(!Reload);\n  };\n\n  useEffect(() => {\n    setTranlators();\n  }, [Reload]);\n\n  const setTranlators = async () => {\n    let translators = await sessionStorage.getItem('TranslatorsInSession', JSON.stringify({\n      translations: []\n    }));\n    translators = JSON.parse(translators);\n    console.log(translators);\n\n    const fetchData = async () => {\n      fetch(\" \".concat(URL, \"options/translations\")).then(res => res.json()).then(dat => {\n        dat.translations.sort((a, b) => {\n          return a.language_name > b.language_name ? 1 : -1;\n        });\n        /* dat.translations.forEach(element => {\r\n           if(element.id != 20) \r\n           {check[element.id] = false;}              \r\n         });*/\n\n        setCheck(check);\n        setTranslators(dat);\n      });\n    };\n\n    fetchData();\n  };\n\n  useEffect(() => {\n    // console.log(Translators.translations.length);\n    if (Translators.translations.length > 0) {\n      sessionStorage.setItem('TranslatorsInSession', JSON.stringify(Translators));\n    }\n  }, [Translators]);\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  return React.createElement(List, {\n    component: \"nav\",\n    \"aria-labelledby\": \"nested-list-subheader\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: handleClick,\n    style: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    style: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(Typography, {\n      style: {\n        color: '#747474',\n        marginLeft: \"-20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"Translations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), open ? React.createElement(ExpandLess, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }) : React.createElement(ExpandMore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(Collapse, {\n    in: open,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: miniLoader,\n    onClick: RemoveAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \" Remove All\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), Translators ? Translators.translations.map((translator, index) => React.createElement(ListItem, {\n    key: \"Translator_\".concat(translator.id),\n    button: true,\n    className: classes.nested,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: check[translator.id],\n      onChange: handleChange(translator.id),\n      value: \"checked\".concat(translator.id),\n      disabled: miniLoader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }),\n    label: translator.language_name + \" - \" + translator.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: \"wraper_laader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loader loadersmall\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["C:\\Users\\Hp\\Desktop\\IslamCheck\\src\\Settings-Translations.js"],"names":["React","useEffect","useState","useContext","makeStyles","Typography","List","ListItem","ListItemIcon","ListItemText","Collapse","ExpandLess","ExpandMore","Checkbox","FormControlLabel","CheckedContext","URLContext","TranslationsLoaderContext","FormattedMessage","Divider","arraySort","async","color","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","NestedList","classes","open","setOpen","translations","Translators","setTranslators","Reload","setReloadflag","miniLoader","setMiniLoader","arr","check","setCheck","URL","setURL","handleChange","ID","event","target","checked","RemoveAll","setTranlators","translators","sessionStorage","getItem","JSON","stringify","parse","console","log","fetchData","fetch","then","res","json","dat","sort","a","b","language_name","length","setItem","handleClick","marginLeft","map","translator","index","id","name"],"mappings":"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","sourcesContent":["import React,{useEffect,useState,useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {CheckedContext,URLContext,TranslationsLoaderContext} from \"./Store\"\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport arraySort from \"array-sort\"\r\nimport { async } from 'q';\r\n\r\nconst color={\r\n    color: '#ABABAB'\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function NestedList() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [Translators,setTranslators]= useState({translations:[]});\r\n  const [Reload,setReloadflag]=useState(false);\r\n  const [miniLoader,setMiniLoader]= useContext(TranslationsLoaderContext);\r\n\r\n  var arr=[]\r\n  //cHECKBOXES\r\nconst[check, setCheck]=useContext(CheckedContext);\r\n\r\nconst[URL, setURL]=useContext(URLContext);\r\n\r\n  const handleChange = (ID) => event => {\r\n    \r\n    if(ID!==null){\r\n      \r\n    setCheck({...check,[ID]:event.target.checked});\r\n   setMiniLoader(true);\r\n   \r\n    }\r\n  \r\n  }\r\n\r\n  \r\n  const RemoveAll=()=>{\r\n      \r\n      setCheck({20: true});\r\n      setMiniLoader(true);\r\n      setReloadflag(!Reload);\r\n     \r\n\r\n  }\r\n \r\n  \r\n  useEffect(() => {\r\n    \r\n    setTranlators()\r\n  \r\n    },[Reload]);\r\n\r\n\r\n   const setTranlators = async()=>{\r\n    let translators = await sessionStorage.getItem('TranslatorsInSession',JSON.stringify({translations:[]}));\r\n    translators = JSON.parse(translators);\r\n    console.log(translators);\r\n    const fetchData = async() => {\r\n            fetch( ` ${URL}options/translations`)\r\n            .then(res =>res.json())\r\n            .then( dat=> { \r\n            dat.translations.sort((a,b)=>{return a.language_name>b.language_name?1:-1}); \r\n           /* dat.translations.forEach(element => {\r\n              if(element.id != 20) \r\n              {check[element.id] = false;}              \r\n            });*/\r\n            setCheck(check);\r\n            setTranslators(dat);\r\n           }); \r\n      }\r\n     fetchData();\r\n   }\r\n\r\n\r\n    useEffect(()=>{\r\n     // console.log(Translators.translations.length);\r\n       if(Translators.translations.length>0)\r\n       {sessionStorage.setItem('TranslatorsInSession',JSON.stringify(Translators));}\r\n    },[Translators])\r\n\r\n    function handleClick(){\r\n      setOpen(!open);\r\n    }\r\n    \r\n  return (\r\n\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      className={classes.root}\r\n    >\r\n       \r\n    \r\n {/* translations */}\r\n <ListItem button onClick={handleClick} style={color}>\r\n        <ListItemIcon style={color} >\r\n        <i className=\"fas fa-list\"></i>\r\n        </ListItemIcon>\r\n        <ListItemText primary={<Typography style={{ color: '#747474', marginLeft:\"-20px\" }}>\r\n          <FormattedMessage id=\"Translations\"/> \r\n          \r\n         </Typography>}/>\r\n      \r\n        {open ? <ExpandLess/>: <ExpandMore/>}\r\n\r\n       \r\n      </ListItem>\r\n      \r\n      {/* TRASNLATORS LIST */}\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n      \r\n        <List component=\"div\" disablePadding>     \r\n        <button disabled = {miniLoader} onClick={RemoveAll}> Remove All</button>\r\n        <Divider/>\r\n         {/* {(Translators)?Translators.translations.sort((a,b)=>{return a.language_name>b.language_name?1:-1}).map((translator,index)=>\r\n              <span key={index} style={{display:\"none\"}}>{ arr.push(translator)} </span>\r\n            \r\n        ):\"\"} */}\r\n       \r\n\r\n\r\n \r\n         {(Translators)?Translators.translations.map((translator,index)=>\r\n         \r\n                  <ListItem  key={`Translator_${translator.id}` } button className={classes.nested} >\r\n                  <FormControlLabel\r\n                    control={\r\n                    <Checkbox \r\n                    checked={check[translator.id]}                   \r\n                    onChange={handleChange(translator.id)} \r\n                    value={`checked${translator.id}`}\r\n                    disabled = {miniLoader} \r\n                    />\r\n                                  }\r\n                    label={translator.language_name + \" - \" + translator.name }\r\n                    \r\n                  />\r\n                  </ListItem>\r\n         \r\n          ):<div className=\"wraper_laader\">\r\n          <div className=\"loader loadersmall\"></div>\r\n        </div>} \r\n\r\n \r\n         </List>\r\n      </Collapse>\r\n    </List>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}