{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\src\\\\DetailHeaderSearchbar.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport \"./search.css\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport { QueryContext, ChosenVerseFlagContext, SearchFlagContext, CheckedContext, OffsetContext, SurahContext, CurrentPageContext, URLContext, LoadingContext, ResultPageContext, NoResultsContext } from \"./Store\";\nimport SurahNames from \"./SurahNames\";\nimport ReactHtmlParser from 'react-html-parser';\n\nfunction Search() {\n  const Surahs = SurahNames;\n\n  const _useState = useState(Surahs),\n        _useState2 = _slicedToArray(_useState, 2),\n        SurahSuggestions = _useState2[0],\n        setSurahSuggestions = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        suggestions2 = _useState4[0],\n        setSuggest2 = _useState4[1];\n\n  const _useContext = useContext(SurahContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        Surah = _useContext2[0],\n        setSurahNo = _useContext2[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        Showflag = _useState6[0],\n        setShowflag = _useState6[1];\n\n  const _useContext3 = useContext(OffsetContext),\n        _useContext4 = _slicedToArray(_useContext3, 2),\n        off = _useContext4[0],\n        setOff = _useContext4[1];\n\n  const _useContext5 = useContext(CurrentPageContext),\n        _useContext6 = _slicedToArray(_useContext5, 2),\n        Currentpage = _useContext6[0],\n        setCurrentPage = _useContext6[1];\n\n  const _useContext7 = useContext(ChosenVerseFlagContext),\n        _useContext8 = _slicedToArray(_useContext7, 2),\n        isChosen = _useContext8[0],\n        setChosen = _useContext8[1];\n\n  const _useContext9 = useContext(CheckedContext),\n        _useContext10 = _slicedToArray(_useContext9, 2),\n        check = _useContext10[0],\n        setCheck = _useContext10[1];\n\n  const _useContext11 = useContext(SearchFlagContext),\n        _useContext12 = _slicedToArray(_useContext11, 2),\n        Qflag = _useContext12[0],\n        setQflag = _useContext12[1];\n\n  const _useContext13 = useContext(URLContext),\n        _useContext14 = _slicedToArray(_useContext13, 2),\n        URL = _useContext14[0],\n        SetUrl = _useContext14[1];\n\n  const _useContext15 = useContext(LoadingContext),\n        _useContext16 = _slicedToArray(_useContext15, 2),\n        Loading = _useContext16[0],\n        setLoading = _useContext16[1];\n\n  const _useContext17 = useContext(ResultPageContext),\n        _useContext18 = _slicedToArray(_useContext17, 2),\n        ResultPage = _useContext18[0],\n        setResultPage = _useContext18[1];\n\n  const _useContext19 = useContext(NoResultsContext),\n        _useContext20 = _slicedToArray(_useContext19, 2),\n        NoResults = _useContext20[0],\n        setNoResultsFound = _useContext20[1];\n\n  const _useContext21 = useContext(QueryContext),\n        _useContext22 = _slicedToArray(_useContext21, 2),\n        Query = _useContext22[0],\n        setQuery = _useContext22[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        Text = _useState8[0],\n        setText = _useState8[1];\n\n  useEffect(() => {\n    setCheck({\n      20: true\n    });\n    return () => {\n      setCheck({\n        20: true\n      });\n    };\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      fetch(\" \".concat(URL, \"suggest?q=\").concat(Text)).then(res => res.json()).then(dat => {\n        setSuggest2(dat);\n      });\n    };\n\n    if (Text.length > 0) {\n      fetchData();\n    } //  return ()=> setText(\"\");\n\n  }, [Text]);\n\n  const onTextChange = e => {\n    let Temp = [];\n\n    if (e.target.value.length >= 0) {\n      var x = e.target.value;\n      setText(x);\n      const regex = new RegExp(\"^\".concat(x), 'i');\n      Temp = Surahs.sort().filter(x => regex.test(x));\n    }\n\n    setSurahSuggestions(Temp);\n    setShowflag(true);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"searchbox detailsearchbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"placeholder\",\n    defaultMessage: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, placeholder => React.createElement(\"input\", {\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    id: \"search\",\n    type: \"text\",\n    placeholder: placeholder,\n    onChange: onTextChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/search?q=\".concat(Text),\n    onClick: e => {\n      if (Text === '') {\n        e.preventDefault();\n      }\n\n      setQuery(Text);\n      setResultPage(1);\n      setTimeout(function () {\n        setNoResultsFound(true);\n        setShowflag(false);\n      }, 3000);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"fa fa-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), Showflag && React.createElement(\"ul\", {\n    className: \"searchsuggestion_ul small_searchsuggestion_ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, Text.length > 0 && SurahSuggestions.map((item, ind) => React.createElement(\"li\", {\n    key: ind,\n    className: \"searchsuggestion_li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\".concat(item.substring(item.indexOf(\"-\") + 1, item.length)),\n    onClick: () => {\n      setSurahNo(item.substring(item.indexOf(\"-\") + 1, item.length));\n      setShowflag(!Showflag);\n      setLoading(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, item))), suggestions2.map((item, ind) => React.createElement(\"li\", {\n    key: ind,\n    className: \"searchsuggestion_li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\".concat(item.chapter_id),\n    onClick: () => {\n      setSurahNo(item.chapter_id);\n\n      if (item.translation_id != null) {\n        setCheck(_objectSpread({}, check, {\n          [item.translation_id]: true\n        }));\n      }\n\n      setCurrentPage(1 + Math.trunc(item.verse_number / 10));\n      setOff(item.verse_number % 10);\n      setChosen(true);\n      setShowflag(false);\n      setLoading(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, ReactHtmlParser(item.text.substring(0, 70)), \"...\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"  (\", item.ayah, \")\"))))));\n}\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\Hp\\Desktop\\IslamCheck\\src\\DetailHeaderSearchbar.js"],"names":["React","useContext","useState","useEffect","FormattedMessage","Link","QueryContext","ChosenVerseFlagContext","SearchFlagContext","CheckedContext","OffsetContext","SurahContext","CurrentPageContext","URLContext","LoadingContext","ResultPageContext","NoResultsContext","SurahNames","ReactHtmlParser","Search","Surahs","SurahSuggestions","setSurahSuggestions","suggestions2","setSuggest2","Surah","setSurahNo","Showflag","setShowflag","off","setOff","Currentpage","setCurrentPage","isChosen","setChosen","check","setCheck","Qflag","setQflag","URL","SetUrl","Loading","setLoading","ResultPage","setResultPage","NoResults","setNoResultsFound","Query","setQuery","Text","setText","fetchData","fetch","then","res","json","dat","length","onTextChange","e","Temp","target","value","x","regex","RegExp","sort","filter","test","placeholder","preventDefault","setTimeout","map","item","ind","substring","indexOf","chapter_id","translation_id","Math","trunc","verse_number","text","ayah"],"mappings":"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","sourcesContent":["  import React,{useContext,useState,useEffect} from \"react\";\r\n  import \"./search.css\";\r\n  import { FormattedMessage } from \"react-intl\";\r\n  import {Link} from \"react-router-dom\";\r\n  import {QueryContext,ChosenVerseFlagContext,\r\n    SearchFlagContext,CheckedContext,OffsetContext,SurahContext,CurrentPageContext,URLContext,LoadingContext,ResultPageContext,NoResultsContext} from \"./Store\"\r\nimport SurahNames from \"./SurahNames\"\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n\r\nfunction Search(){\r\n    const Surahs=SurahNames;\r\n\r\nconst [SurahSuggestions,setSurahSuggestions]= useState(Surahs);\r\n\r\nconst [suggestions2,setSuggest2] = useState([]);\r\n  const [Surah, setSurahNo]=useContext(SurahContext);\r\n  const [Showflag, setShowflag]=useState(false);\r\n  const [off, setOff] = useContext(OffsetContext);\r\n  const[Currentpage,setCurrentPage]=useContext(CurrentPageContext);\r\n  const [isChosen, setChosen] = useContext(ChosenVerseFlagContext);\r\n  const[check, setCheck]=useContext(CheckedContext);\r\n  const[Qflag,setQflag]=useContext(SearchFlagContext)\r\n  const [URL,SetUrl]=useContext(URLContext)\r\n  const [Loading,setLoading]=useContext(LoadingContext)\r\n  const [ResultPage,setResultPage]=useContext(ResultPageContext);\r\n  const [NoResults,setNoResultsFound]=useContext(NoResultsContext)\r\n\r\n\r\n\r\n  const[Query,setQuery]=useContext(QueryContext)\r\n  const[Text,setText]=useState('')\r\n\r\n  useEffect(()=>{\r\n    setCheck({20:true})\r\n\r\n    return(()=>{\r\n      setCheck({20:true})\r\n    })\r\n  },[])\r\n\r\n  useEffect(() => {  \r\n    const fetchData = async() => {\r\n        \r\n            fetch( ` ${URL}suggest?q=${Text}`)\r\n            .then(res =>res.json())\r\n            .then(dat=> {setSuggest2(dat);\r\n            }); \r\n          \r\n          }\r\n          if(Text.length>0)\r\n         {fetchData();}\r\n    //  return ()=> setText(\"\");\r\n  \r\n    },[Text]);\r\n  \r\n const onTextChange =(e)=>{\r\n  let Temp=[];\r\n \r\n  \r\n  if(e.target.value.length >= 0){\r\n \r\n    var x=e.target.value;\r\n    setText(x);\r\n        const regex =new RegExp(`^${x}`,'i')\r\n   \r\n     Temp=Surahs.sort().filter((x)=>regex.test(x))\r\n\r\n  \r\n     \r\n  }\r\n \r\n  setSurahSuggestions(Temp);\r\n  setShowflag(true)\r\n} \r\n\r\n  \r\n  return(\r\n    <form className=\"searchbox detailsearchbox\"> \r\n    <FormattedMessage id=\"placeholder\" defaultMessage=\"search\">\r\n{placeholder => <input autoComplete=\"off\" autoCorrect=\"off\" id='search' type=\"text\" placeholder={placeholder} onChange={onTextChange} />}\r\n</FormattedMessage>\r\n\r\n<Link to={`/search?q=${Text}`} onClick={(e)=>{if(Text === '') {e.preventDefault();}  setQuery(Text);setResultPage(1);  setTimeout(function () {\r\n                                        setNoResultsFound(true);setShowflag(false)\r\n                                        \r\n                                    }, 3000)}}>\r\n                                      <button type=\"submit\" className=\"fa fa-search\"></button></Link> \r\n\r\n\r\n{Showflag && \r\n            <ul className=\"searchsuggestion_ul small_searchsuggestion_ul\">\r\n            {Text.length > 0 &&\r\n              SurahSuggestions.map((item,ind)=> \r\n            <li key={ind} className=\"searchsuggestion_li\">\r\n            <Link to={`/${item.substring(item.indexOf(\"-\")+1,item.length)}`} \r\n            onClick={()=>\r\n            {\r\n            setSurahNo(item.substring(item.indexOf(\"-\")+1,item.length));\r\n            setShowflag(!Showflag)\r\n            setLoading(true);\r\n            }}> \r\n            {item}\r\n            </Link>\r\n\r\n            </li>\r\n\r\n            )}\r\n\r\n          {suggestions2.map((item,ind)=>\r\n            <li key={ind} className=\"searchsuggestion_li\">\r\n            <Link to={`/${item.chapter_id}`}\r\n              onClick={()=>{\r\n                setSurahNo(item.chapter_id);\r\n                if(item.translation_id !=null){\r\n                setCheck({...check,[item.translation_id]:true})\r\n                }\r\n                setCurrentPage(1+(Math.trunc(item.verse_number/10)));\r\n                setOff(item.verse_number%10);\r\n                setChosen(true);\r\n                setShowflag(false);\r\n                setLoading(true);\r\n               \r\n                \r\n                }}> \r\n              {ReactHtmlParser(item.text.substring(0,70))}...\r\n              <span>  ({item.ayah})</span>\r\n              </Link>\r\n            </li>\r\n            )}\r\n</ul>}\r\n    </form>\r\n            );\r\n  }\r\n  export default Search;"]},"metadata":{},"sourceType":"module"}