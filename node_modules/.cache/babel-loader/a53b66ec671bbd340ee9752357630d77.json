{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\src\\\\Settings-Reading.js\";\nimport React, { useContext, useState } from \"react\";\nimport Tooltip from \"react-simple-tooltip\";\nimport \"./Settings-Reading.css\";\nimport { If } from 'react-control-statements';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { CurrentPageContext, LastPageContext, SurahContext, endFlagContext, TranslitContext, LoadingContext, OffsetContext, ArbicFontSizeContext, TopContext, DisabledContext, BismillahContext } from \"./Store\";\nimport { Link } from \"react-router-dom\";\nimport { goToTop } from 'react-scrollable-anchor';\nimport { FormattedMessage } from \"react-intl\";\nimport { FacebookShareButton, TwitterShareButton } from 'react-share';\nimport Sound from 'react-sound';\nimport { PlayerContextProvider, PlayerContextConsumer } from '@cassette/core';\nimport { MediaPlayerControls } from '@cassette/player';\nimport { MediaProgress } from '@cassette/player';\nimport { RepeatButton } from '@cassette/player';\nimport { usePlayerContext } from '@cassette/hooks';\nimport { MuteButton } from '@cassette/player';\nimport { ForwardSkipButton } from '@cassette/player';\nimport { PlayPauseButton } from '@cassette/player';\nimport { DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\nimport \"./qfonts.css\";\nimport $ from 'jquery';\n\nfunction Reading(props) {\n  const _useState = useState(['']),\n        _useState2 = _slicedToArray(_useState, 2),\n        Mp3File = _useState2[0],\n        setMp3File = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        playWord = _useState4[0],\n        setPlayWord = _useState4[1];\n\n  const _useContext = useContext(SurahContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        SurahNo = _useContext2[0],\n        setSurah = _useContext2[1];\n\n  const _useContext3 = useContext(endFlagContext),\n        _useContext4 = _slicedToArray(_useContext3, 2),\n        endFlag = _useContext4[0],\n        setFlag = _useContext4[1];\n\n  const _useContext5 = useContext(CurrentPageContext),\n        _useContext6 = _slicedToArray(_useContext5, 2),\n        Currentpage = _useContext6[0],\n        setCurrentPage = _useContext6[1];\n\n  const _useContext7 = useContext(LastPageContext),\n        _useContext8 = _slicedToArray(_useContext7, 2),\n        lastPage = _useContext8[0],\n        setLast = _useContext8[1];\n\n  const _useContext9 = useContext(TranslitContext),\n        _useContext10 = _slicedToArray(_useContext9, 2),\n        TranslitShowing = _useContext10[0],\n        setTrans = _useContext10[1];\n\n  const _useContext11 = useContext(OffsetContext),\n        _useContext12 = _slicedToArray(_useContext11, 2),\n        off = _useContext12[0],\n        setOff = _useContext12[1];\n\n  const _useContext13 = useContext(LoadingContext),\n        _useContext14 = _slicedToArray(_useContext13, 2),\n        Loading = _useContext14[0],\n        setLoading = _useContext14[1];\n\n  const _useContext15 = useContext(TopContext),\n        _useContext16 = _slicedToArray(_useContext15, 2),\n        Top = _useContext16[0],\n        setTop = _useContext16[1];\n\n  const _useContext17 = useContext(DisabledContext),\n        _useContext18 = _slicedToArray(_useContext17, 2),\n        Disabled = _useContext18[0],\n        setDisabled = _useContext18[1];\n\n  const _useContext19 = useContext(BismillahContext),\n        _useContext20 = _slicedToArray(_useContext19, 2),\n        Bism = _useContext20[0],\n        setBism = _useContext20[1]; //Encoder\n\n\n  const Entities = require('html-entities').AllHtmlEntities;\n\n  const _useState5 = useState(props.audio),\n        _useState6 = _slicedToArray(_useState5, 2),\n        PlayList = _useState6[0],\n        setPlayList = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        VersePlay = _useState8[0],\n        setVersePlay = _useState8[1];\n\n  const _useState9 = useState(props.versespack),\n        _useState10 = _slicedToArray(_useState9, 2),\n        VersesPack = _useState10[0],\n        setVersesPack = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        timer = _useState12[0],\n        setTimer = _useState12[1];\n\n  const _useState13 = useState(-1),\n        _useState14 = _slicedToArray(_useState13, 2),\n        currentVerseIndex = _useState14[0],\n        setCurrentVerseIndex = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        currentWord = _useState16[0],\n        setCurrentWord = _useState16[1];\n\n  const _useContext21 = useContext(ArbicFontSizeContext),\n        _useContext22 = _slicedToArray(_useContext21, 2),\n        ArbicFontSize = _useContext22[0],\n        setArbicFontSize = _useContext22[1];\n\n  const entities = new Entities();\n  var id = SurahNo;\n\n  const playWordAudio = word => {\n    setMp3File(word.audio_url + '?_t=' + new Date());\n    setPlayWord(1);\n  };\n\n  const changepage = () => {\n    if (Currentpage !== lastPage) {\n      setCurrentPage(Currentpage + 1);\n      setTop(false);\n    }\n\n    if (Currentpage === lastPage) {\n      setFlag(false);\n    }\n  };\n\n  function onFinishedPlayingWord(e) {\n    setPlayWord(0);\n  }\n\n  function updateTimer(e) {\n    setTimer(Math.ceil(e.currentTime * 1000));\n    setCurrentVerseIndex(e.trackIndex); //console.log('L: ' + $('.highlight-word-on-play').length);\n\n    if ($('.highlight-word-on-play').length) {\n      var playingWord = $(\".highlight-word-on-play\").offset().top;\n\n      if (currentWord > playingWord) {} else {\n        // console.log('cw: ' + currentWord + ': pw: ' + playWord);\n        if (currentWord != 0 && currentWord != playingWord) {\n          //console.log('@#@#@##@#@#');\n          scroller.scrollTo('highlighted-word', {\n            duration: 800,\n            delay: 0,\n            smooth: 'easeInOutQuart',\n            offset: -200\n          });\n        }\n      }\n\n      setCurrentWord(playingWord);\n    }\n  }\n\n  function activeTrackUpdate(e) {\n    if (e.trackIndex == 0) scroll.scrollToTop();\n  }\n\n  function getSegment(arr, index, childIndex) {\n    if (arr[index] != undefined) return arr[index][childIndex];\n  }\n\n  function GetVerse(props) {\n    let words = [];\n    let counter = 0;\n    props.mem.words.forEach(function myFunction(member, ind) {\n      if (member.chartype.name === 'word' || member.chartype.name === 'end') {\n        words.push(member);\n      }\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, words.map(function (member, ind) {\n      return React.createElement(Tooltip, {\n        key: \"Rverse_\".concat(ind),\n        className: \"tooltipmaindiv hamza\",\n        content: member.translation ? member.translation.translation.text : member.chartype.name === \"end\" ? \"Verse \" + props.mem.verse_number : member.chartype.name,\n        background: \"#000\",\n        padding: 11,\n        fontSize: \"12px\",\n        fadeEasing: \"linear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        className: getSegment(props.mem.audio.segments, ind, 2) < timer && getSegment(props.mem.audio.segments, ind, 3) > timer && currentVerseIndex == props.versekey ? \"pointer ArabicFontChange \" + member.class_name + \" highlight-word-on-play\" : \"pointer ArabicFontChange \" + member.class_name,\n        style: {\n          'font-size': ArbicFontSize\n        },\n        id: getSegment(props.mem.audio.segments, ind, 2) < timer && getSegment(props.mem.audio.segments, ind, 3) > timer && currentVerseIndex == props.versekey ? \"highlighted-word\" : \"word\" + ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, entities.decode(member.code_hex)));\n    }));\n  }\n\n  function setHighLightClass() {}\n\n  return React.createElement(React.Fragment, null, React.createElement(PlayerContextProvider, {\n    playlist: props.audio,\n    onTimeUpdate: e => updateTimer(e),\n    onActiveTrackUpdate: e => activeTrackUpdate(e),\n    loadFirstTrackOnPlaylistComplete: false,\n    defaultRepeatStrategy: 'none',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    className: \"readingmain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(InfiniteScroll, {\n    dataLength: props.data.length,\n    next: changepage,\n    hasMore: endFlag,\n    loader: React.createElement(\"div\", {\n      className: \"wraper_laader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })),\n    scrollThreshold: 0.7 //executes after 100%-pixelamount\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"fb-tw-share d-flex justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(FacebookShareButton, {\n    url: \"http://18.189.100.203\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    className: \"facustomfacebook\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-facebook-f fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }))), React.createElement(TwitterShareButton, {\n    url: \"http://18.189.100.203\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    className: \"facustomtwitter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-twitter fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }))))), Bism && React.createElement(\"div\", {\n    className: \"p1 bism \",\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"\\uFB51\\uFB52\\uFB53\\uFB54\"), React.createElement(\"div\", {\n    className: \"mainsurah mtb-big mt-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arabic\",\n    style: {\n      paddingTop: 60\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, Array.isArray(props.data) ? props.data.map((mem, key) => React.createElement(React.Fragment, null, currentVerseIndex != key && (Array.isArray(mem.words) ? mem.words.map((member, ind) => TranslitShowing ? React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n    key: \"Rword_\".concat(ind),\n    className: \"tooltipmaindiv\",\n    content: member.transliteration ? member.transliteration.transliteration.text : \"Verse \" + mem.verse_number //  (mem.words.length=== index + 1)?\n    ,\n    background: \"#000\",\n    fontSize: \"12px\",\n    padding: 11,\n    fadeEasing: \"linear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"pointer ArabicFontChange \" + member.class_name,\n    style: {\n      'fontSize': ArbicFontSize + \"px\",\n      'lineHeight': ArbicFontSize / 50\n    },\n    onClick: () => playWordAudio(member),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, entities.decode(member.code_hex), \" \"))) : React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n    className: \"tooltipmaindiv hamza\",\n    content: member.translation ? member.translation.translation.text : member.chartype.name === \"end\" ? \"Verse \" + mem.verse_number : member.chartype.name,\n    background: \"#000\",\n    fontSize: \"12px\",\n    padding: 11,\n    fadeEasing: \"linear\" // fixed={true}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"pointer ArabicFontChange \" + member.class_name,\n    style: {\n      'fontSize': ArbicFontSize + \"px\",\n      'lineHeight': ArbicFontSize / 50\n    },\n    onClick: () => playWordAudio(member),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, entities.decode(member.code_hex))))) : \"Loading\"), currentVerseIndex == key && React.createElement(GetVerse, {\n    mem: mem,\n    versekey: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }))) : \"Loading\")))), React.createElement(\"div\", {\n    className: \"container mb-5 p-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"next-previous-surah d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, SurahNo != 1 ? React.createElement(Link, {\n    to: \"/\".concat(SurahNo - 1),\n    onClick: () => {\n      setSurah(SurahNo - 1);\n      setLoading(true);\n      setCurrentPage(1);\n      setOff(1);\n      setLast(0);\n      setDisabled(true);\n      setTimeout(function () {\n        setDisabled(false);\n      }, 7000);\n    },\n    className: \"btn btn-outline-primary btn-lg prev_btn_btm \".concat(Disabled ? \"disabled\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"PreviousSurah\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }), \" \", React.createElement(\"i\", {\n    className: \"fas fa-arrow-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  })) : \"\", React.createElement(Link, {\n    to: \"/\".concat(SurahNo),\n    onClick: () => {\n      goToTop();\n    },\n    className: \"btn btn-outline-primary btn-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"BeginningofSurah\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  })), SurahNo != 114 ? React.createElement(Link, {\n    to: \"/\".concat(parseInt(SurahNo) + 1),\n    onClick: () => {\n      setSurah(parseInt(SurahNo) + 1);\n      setLoading(true);\n      setCurrentPage(1);\n      setOff(1);\n      setLast(0);\n      setDisabled(true);\n      setTimeout(function () {\n        setDisabled(false);\n      }, 7000);\n    },\n    className: \"btn btn-outline-primary btn-lg next_btn_btm\\n                            \".concat(Disabled ? \"disabled\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"NextSurah\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fas fa-arrow-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  })) : \"\"))), React.createElement(MediaPlayerControls, {\n    controls: ['spacer', 'backskip', 'playpause', 'forwardskip', 'spacer', 'progress', 'repeat'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  })), Mp3File != '' && React.createElement(Sound, {\n    url: Mp3File ? Mp3File : '',\n    playStatus: playWord == 1 ? Sound.status.PLAYING : Sound.status.STOPPED,\n    onFinishedPlaying: e => onFinishedPlayingWord(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }));\n}\n\nexport default Reading;","map":{"version":3,"sources":["C:\\Users\\Hp\\Desktop\\IslamCheck\\src\\Settings-Reading.js"],"names":["React","useContext","useState","Tooltip","If","InfiniteScroll","CurrentPageContext","LastPageContext","SurahContext","endFlagContext","TranslitContext","LoadingContext","OffsetContext","ArbicFontSizeContext","TopContext","DisabledContext","BismillahContext","Link","goToTop","FormattedMessage","FacebookShareButton","TwitterShareButton","Sound","PlayerContextProvider","PlayerContextConsumer","MediaPlayerControls","MediaProgress","RepeatButton","usePlayerContext","MuteButton","ForwardSkipButton","PlayPauseButton","DirectLink","Element","Events","animateScroll","scroll","scrollSpy","scroller","$","Reading","props","Mp3File","setMp3File","playWord","setPlayWord","SurahNo","setSurah","endFlag","setFlag","Currentpage","setCurrentPage","lastPage","setLast","TranslitShowing","setTrans","off","setOff","Loading","setLoading","Top","setTop","Disabled","setDisabled","Bism","setBism","Entities","require","AllHtmlEntities","audio","PlayList","setPlayList","VersePlay","setVersePlay","versespack","VersesPack","setVersesPack","timer","setTimer","currentVerseIndex","setCurrentVerseIndex","currentWord","setCurrentWord","ArbicFontSize","setArbicFontSize","entities","id","playWordAudio","word","audio_url","Date","changepage","onFinishedPlayingWord","e","updateTimer","Math","ceil","currentTime","trackIndex","length","playingWord","offset","top","scrollTo","duration","delay","smooth","activeTrackUpdate","scrollToTop","getSegment","arr","index","childIndex","undefined","GetVerse","words","counter","mem","forEach","myFunction","member","ind","chartype","name","push","map","translation","text","verse_number","segments","versekey","class_name","decode","code_hex","setHighLightClass","data","textAlign","paddingTop","Array","isArray","key","transliteration","setTimeout","parseInt","status","PLAYING","STOPPED"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\r\nimport Tooltip from \"react-simple-tooltip\";\r\nimport \"./Settings-Reading.css\";\r\nimport {If} from 'react-control-statements';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {\r\n    CurrentPageContext,\r\n    LastPageContext,\r\n    SurahContext,\r\n    endFlagContext,\r\n    TranslitContext,\r\n    LoadingContext,\r\n    OffsetContext, ArbicFontSizeContext, TopContext, DisabledContext,BismillahContext\r\n} from \"./Store\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {goToTop} from 'react-scrollable-anchor'\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {FacebookShareButton, TwitterShareButton} from 'react-share';\r\nimport Sound from 'react-sound';\r\nimport {PlayerContextProvider, PlayerContextConsumer} from '@cassette/core';\r\nimport {MediaPlayerControls} from '@cassette/player';\r\nimport {MediaProgress} from '@cassette/player';\r\nimport {RepeatButton} from '@cassette/player';\r\nimport {usePlayerContext} from '@cassette/hooks';\r\nimport {MuteButton} from '@cassette/player';\r\nimport {ForwardSkipButton} from '@cassette/player';\r\nimport {PlayPauseButton} from '@cassette/player';\r\nimport {DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller} from 'react-scroll'\r\nimport \"./qfonts.css\"\r\nimport $ from 'jquery';\r\n\r\n\r\nfunction Reading(props) {\r\n    const [Mp3File, setMp3File] = useState(['']);\r\n\r\n    const [playWord, setPlayWord] = useState(0);\r\n    const [SurahNo, setSurah] = useContext(SurahContext);\r\n    const [endFlag, setFlag] = useContext(endFlagContext);\r\n    const [Currentpage, setCurrentPage] = useContext(CurrentPageContext);\r\n    const [lastPage, setLast] = useContext(LastPageContext);\r\n    const [TranslitShowing, setTrans] = useContext(TranslitContext);\r\n    const [off, setOff] = useContext(OffsetContext);\r\n    const [Loading, setLoading] = useContext(LoadingContext);\r\n    const [Top, setTop] = useContext(TopContext);\r\n    const [Disabled, setDisabled] = useContext(DisabledContext);\r\n    const [Bism, setBism] = useContext(BismillahContext);\r\n\r\n    //Encoder\r\n    const Entities = require('html-entities').AllHtmlEntities;\r\n\r\n    const [PlayList, setPlayList] = useState(props.audio);\r\n    const [VersePlay, setVersePlay] = useState(false);\r\n    const [VersesPack, setVersesPack] = useState(props.versespack);\r\n\r\n    const [timer, setTimer] = useState('');\r\n    const [currentVerseIndex, setCurrentVerseIndex] = useState(-1);\r\n    const [currentWord, setCurrentWord] = useState(0);\r\n    const [ArbicFontSize, setArbicFontSize] = useContext(ArbicFontSizeContext);\r\n\r\n    const entities = new Entities();\r\n\r\n    var id = SurahNo;\r\n\r\n    const playWordAudio = (word) => {\r\n        setMp3File(word.audio_url + '?_t=' + new Date());\r\n        setPlayWord(1)\r\n    }\r\n\r\n    const changepage = () => {\r\n\r\n        if (Currentpage !== lastPage) {\r\n            setCurrentPage(Currentpage + 1);\r\n            setTop(false);\r\n\r\n        }\r\n\r\n        if (Currentpage === lastPage) {\r\n           \r\n            setFlag(false)\r\n\r\n        }\r\n    }\r\n\r\n    function onFinishedPlayingWord(e) {\r\n        setPlayWord(0)\r\n    }\r\n\r\n    function updateTimer(e) {\r\n\r\n\r\n        setTimer(Math.ceil(e.currentTime * 1000));\r\n        setCurrentVerseIndex(e.trackIndex);\r\n\r\n\r\n        //console.log('L: ' + $('.highlight-word-on-play').length);\r\n        if ($('.highlight-word-on-play').length) {\r\n\r\n            var playingWord = $(\".highlight-word-on-play\").offset().top;\r\n           \r\n            \r\n \r\n            if (currentWord > playingWord) {\r\n\r\n\r\n            }\r\n            else {\r\n\r\n\r\n               // console.log('cw: ' + currentWord + ': pw: ' + playWord);\r\n                if (currentWord != 0 && currentWord != playingWord) {\r\n                    \r\n                    //console.log('@#@#@##@#@#');\r\n                    scroller.scrollTo('highlighted-word',{\r\n                        duration: 800,\r\n                        delay: 0,\r\n                        smooth: 'easeInOutQuart',\r\n                        offset: -200\r\n                    })\r\n                }\r\n            }\r\n\r\n\r\n            setCurrentWord(playingWord);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function activeTrackUpdate(e) {\r\n\r\n\r\n        if (e.trackIndex == 0)\r\n            scroll.scrollToTop();\r\n\r\n    }\r\n\r\n\r\n    function getSegment(arr, index, childIndex) {\r\n\r\n        if (arr[index] != undefined)\r\n            return arr[index][childIndex];\r\n\r\n    }\r\n\r\n    function GetVerse(props) {\r\n        let words = [];\r\n        let counter = 0;\r\n        props.mem.words.forEach(function myFunction(member, ind) {\r\n            if (member.chartype.name === 'word' || member.chartype.name === 'end') {\r\n                words.push(member)\r\n            }\r\n        });\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n\r\n                {words.map(function (member, ind) {\r\n                    return (\r\n                        <Tooltip key={`Rverse_${ind}` } className=\"tooltipmaindiv hamza\"\r\n                                 content={\r\n                                     (member.translation) ? member.translation.translation.text :\r\n                                         (member.chartype.name === \"end\") ? \"Verse \" + props.mem.verse_number : member.chartype.name\r\n                                 }\r\n                                 background=\"#000\"\r\n                                 padding={11}\r\n                                 fontSize=\"12px\"\r\n                                 fadeEasing=\"linear\"\r\n                        >\r\n\r\n\r\n                            <b className={(getSegment(props.mem.audio.segments, ind, 2) < timer) && (getSegment(props.mem.audio.segments, ind, 3) > timer) && currentVerseIndex == props.versekey ? \"pointer ArabicFontChange \" + member.class_name + \" highlight-word-on-play\" : \"pointer ArabicFontChange \" + member.class_name}\r\n                               style={{\r\n                                   'font-size': ArbicFontSize,\r\n\r\n                               }}\r\n                               id = {(getSegment(props.mem.audio.segments, ind, 2) < timer) && (getSegment(props.mem.audio.segments, ind, 3) > timer) && currentVerseIndex == props.versekey ?\"highlighted-word\" : (\"word\"+ind)}\r\n                            >\r\n                                \r\n                                {entities.decode(member.code_hex)}\r\n                            </b>\r\n\r\n\r\n                        </Tooltip>\r\n\r\n                    )\r\n\r\n                })}\r\n\r\n            </React.Fragment>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    function setHighLightClass(){\r\n        \r\n    } \r\n\r\n\r\n    return (\r\n        <>\r\n            <PlayerContextProvider\r\n                playlist={props.audio}\r\n                onTimeUpdate={(e) => updateTimer(e)}\r\n                onActiveTrackUpdate={(e) => activeTrackUpdate(e)}\r\n                loadFirstTrackOnPlaylistComplete={false}\r\n                defaultRepeatStrategy={'none'}\r\n            >\r\n\r\n\r\n                <main className=\"readingmain\">\r\n                    <InfiniteScroll\r\n                        dataLength={props.data.length}\r\n                        next={changepage}\r\n                        hasMore={endFlag}\r\n                        loader={<div className=\"wraper_laader\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>}\r\n                        scrollThreshold={0.7}  //executes after 100%-pixelamount\r\n                    >\r\n                        <div className=\"container mt-5\">\r\n                            <div className=\"fb-tw-share d-flex justify-content-end\">\r\n                                <FacebookShareButton url=\"http://18.189.100.203\">\r\n                                    <a href=\"\" className=\"facustomfacebook\">\r\n                                        <i className=\"fab fa-facebook-f fa-lg\"></i>\r\n                                    </a>\r\n                                </FacebookShareButton>\r\n                                <TwitterShareButton url=\"http://18.189.100.203\">\r\n                                    <a href=\"\" className=\"facustomtwitter\">\r\n                                        <i className=\"fab fa-twitter fa-lg\"></i>\r\n                                    </a>\r\n                                </TwitterShareButton>\r\n                            </div>\r\n                        </div>\r\n                      \r\n                        {Bism && <div className={\"p1 bism \"} style={{textAlign: \"center\"}}>\r\n                                    ﭑﭒﭓﭔ</div>}\r\n                        <div className=\"mainsurah mtb-big mt-0\">\r\n                            <div className=\"container\">\r\n                                <div className=\"arabic\" style={{paddingTop: 60}}>\r\n                                    {Array.isArray(props.data) ? props.data.map((mem, key) =>\r\n\r\n                                        <>\r\n\r\n                                            {(currentVerseIndex != key) && (\r\n                                                Array.isArray(mem.words)? mem.words.map((member,ind) =>\r\n                                                    (TranslitShowing) ?\r\n                                                        <>\r\n                                                            <Tooltip key={`Rword_${ind}` } className=\"tooltipmaindiv\"\r\n                                                                     content={\r\n                                                                         (member.transliteration) ? member.transliteration.transliteration.text :\r\n                                                                             \"Verse \" + mem.verse_number\r\n                                                                     }\r\n                                                                //  (mem.words.length=== index + 1)?\r\n                                                                     background=\"#000\"\r\n                                                                     fontSize=\"12px\"\r\n                                                                     padding={11}\r\n                                                                     fadeEasing=\"linear\"\r\n\r\n                                                            >\r\n                                                                <b className={\"pointer ArabicFontChange \" + member.class_name}\r\n                                                                   style={{\r\n                                                                       'fontSize': ArbicFontSize+\"px\",\r\n                                                                       'lineHeight': ArbicFontSize/50\r\n                                                                   }}\r\n                                                                   onClick={() => playWordAudio(member)}>\r\n                                                                    {entities.decode(member.code_hex)} </b>\r\n                                                            </Tooltip>\r\n                                                        </>\r\n                                                        :\r\n                                                        <>\r\n                                                            <Tooltip className=\"tooltipmaindiv hamza\"\r\n\r\n                                                                     content={\r\n                                                                         (member.translation) ? member.translation.translation.text :\r\n                                                                             (member.chartype.name === \"end\") ? \"Verse \" + mem.verse_number : member.chartype.name}\r\n                                                                     background=\"#000\"\r\n                                                                     fontSize=\"12px\"\r\n                                                                     padding={11}\r\n                                                                     fadeEasing=\"linear\"\r\n                                                                // fixed={true}\r\n                                                            >\r\n                                                                <b className={\"pointer ArabicFontChange \" + member.class_name}\r\n                                                                   style={{\r\n                                                                       'fontSize': ArbicFontSize+\"px\",\r\n                                                                       'lineHeight': ArbicFontSize/50\r\n                                                                   }}\r\n                                                                   onClick={() => playWordAudio(member)}>\r\n                                                                    {entities.decode(member.code_hex)}</b>\r\n                                                            </Tooltip>\r\n                                                        </>\r\n                                                ) : \"Loading\"\r\n                                            )}\r\n\r\n\r\n                                            {(currentVerseIndex == key) && (\r\n                                                <GetVerse mem={mem} versekey={key}/>\r\n                                            )}\r\n\r\n\r\n                                        </>) : \"Loading\"}\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </InfiniteScroll>\r\n\r\n                    <div className=\"container mb-5 p-1\">\r\n                        <div className=\"next-previous-surah d-flex justify-content-between align-items-center\">\r\n                            {(SurahNo != 1) ?\r\n                                <Link to={`/${SurahNo - 1}`} onClick={() => {\r\n                                    setSurah(SurahNo - 1);\r\n                                    setLoading(true);\r\n                                    setCurrentPage(1);\r\n                                    setOff(1);\r\n                                    setLast(0);\r\n                                    setDisabled(true);\r\n                                    setTimeout(function () {\r\n                                        setDisabled(false);\r\n                                    }, 7000)\r\n                                }}\r\n\r\n                                      className={`btn btn-outline-primary btn-lg prev_btn_btm ${(Disabled) ? \"disabled\" : \"\"}`}>\r\n\r\n                                    <FormattedMessage\r\n                                        id=\"PreviousSurah\"/> <i\r\n                                    className=\"fas fa-arrow-left\"></i>\r\n                                </Link>\r\n                                : \"\"}\r\n\r\n                            <Link to={`/${SurahNo}`} onClick={() => {\r\n                                goToTop()\r\n                            }} className=\"btn btn-outline-primary btn-lg\"><FormattedMessage id=\"BeginningofSurah\"/>\r\n                            </Link>\r\n                            {(SurahNo != 114) ?\r\n                                <Link to={`/${(parseInt(SurahNo) + 1)}`} onClick={() => {\r\n                                    setSurah((parseInt(SurahNo) + 1));\r\n                                    setLoading(true);\r\n                                    setCurrentPage(1);\r\n                                    setOff(1);\r\n                                    setLast(0);\r\n                                    setDisabled(true);\r\n                                    setTimeout(function () {\r\n                                        setDisabled(false);\r\n\r\n                                    }, 7000)\r\n\r\n                                }}\r\n                                      className={`btn btn-outline-primary btn-lg next_btn_btm\r\n                            ${(Disabled) ? \"disabled\" : \"\"}`}>\r\n                                    <FormattedMessage id=\"NextSurah\"/>\r\n                                    <i className=\"fas fa-arrow-right\"></i>\r\n                                </Link>\r\n                                : \"\"}\r\n                        </div>\r\n                    </div>\r\n\r\n                </main>\r\n\r\n                <MediaPlayerControls\r\n                    controls={['spacer', 'backskip', 'playpause', 'forwardskip', 'spacer', 'progress', 'repeat']}\r\n                />\r\n\r\n            </PlayerContextProvider>\r\n\r\n            {(Mp3File != '') && (\r\n                <Sound\r\n                    url={(Mp3File) ? Mp3File : ''}\r\n                    playStatus={(playWord == 1) ? Sound.status.PLAYING : Sound.status.STOPPED}\r\n                    onFinishedPlaying={(e) => onFinishedPlayingWord(e)}\r\n\r\n                />\r\n\r\n            )}\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Reading;"]},"metadata":{},"sourceType":"module"}