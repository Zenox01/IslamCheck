{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\IslamCheck\\\\src\\\\Detailpage.js\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport Header from \"./DetailHeader\";\nimport Footer from \"./Footer\";\nimport Main from \"./DetailMain\";\nimport { SurahContext, URLContext, DropDownChapterContext, LangContext } from \"./Store\";\nimport { Helmet } from 'react-helmet';\nimport { async } from \"q\";\nwindow.isLoading = true;\n\nfunction Homepage() {\n  const _useContext = useContext(DropDownChapterContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        ChapData = _useContext2[0],\n        setHome = _useContext2[1];\n\n  const _useContext3 = useContext(LangContext),\n        _useContext4 = _slicedToArray(_useContext3, 2),\n        lang = _useContext4[0],\n        setLang = _useContext4[1];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        Verses = _useState2[0],\n        setVerses = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        info = _useState4[0],\n        setInfo = _useState4[1];\n\n  const _useContext5 = useContext(SurahContext),\n        _useContext6 = _slicedToArray(_useContext5, 1),\n        SurahNo = _useContext6[0]; // const [isLoading, setLoading]=useContext(LoadingContext);\n\n\n  const _useContext7 = useContext(URLContext),\n        _useContext8 = _slicedToArray(_useContext7, 2),\n        URL = _useContext8[0],\n        setUrl = _useContext8[1];\n\n  const prevSurah = usePrevious(SurahNo);\n  useEffect(() => {\n    const fetchChapters = async () => {\n      fetch(\"\".concat(URL, \"chapters?language=\").concat(lang)).then(res => res.json()).then(data => setHome(data.chapters));\n    };\n\n    const fetchData = async () => {\n      fetch(\"\".concat(URL, \"chapters/\").concat(SurahNo, \"/verses?language=\").concat(lang)).then(res => res.json()).then(dat => setVerses(dat.verses));\n      fetch(\"\".concat(URL, \"chapters/\").concat(SurahNo, \"/info\")).then(res => res.json()).then(dat => {\n        setInfo(dat.chapter_info);\n      });\n    };\n\n    fetchData();\n    fetchChapters();\n  }, [SurahNo, lang]);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" Islam Check | \", ChapData ? ChapData[SurahNo - 1][\"name_simple\"] : \"\")), React.createElement(Header, {\n    ChapData: ChapData,\n    VerseTotal: Verses ? Verses.total : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Main, {\n    info: info,\n    Content: Verses ? Verses : \"\",\n    ChapData: ChapData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}\n\nexport default Homepage;","map":{"version":3,"sources":["C:\\Users\\Hp\\Desktop\\IslamCheck\\src\\Detailpage.js"],"names":["React","useEffect","useState","useContext","useRef","Header","Footer","Main","SurahContext","URLContext","DropDownChapterContext","LangContext","Helmet","async","window","isLoading","Homepage","ChapData","setHome","lang","setLang","Verses","setVerses","info","setInfo","SurahNo","URL","setUrl","prevSurah","usePrevious","fetchChapters","fetch","then","res","json","data","chapters","fetchData","dat","verses","chapter_info","value","ref","current","total"],"mappings":"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","sourcesContent":["import React,{useEffect,useState,useContext,useRef} from \"react\";\r\n\r\nimport Header from \"./DetailHeader\";\r\nimport Footer from \"./Footer\";\r\nimport Main from \"./DetailMain\";\r\nimport {SurahContext,URLContext,DropDownChapterContext,LangContext} from \"./Store\";\r\n\r\nimport { Helmet } from 'react-helmet';\r\nimport { async } from \"q\";\r\n\r\n\r\nwindow.isLoading =true;\r\nfunction Homepage() {\r\n  const [ChapData, setHome]=useContext(DropDownChapterContext);\r\n  const [lang, setLang]=useContext(LangContext);    \r\n\r\n  const [Verses, setVerses] = useState();\r\n  const [info,setInfo]=useState();\r\nconst [SurahNo, ]=useContext(SurahContext);\r\n// const [isLoading, setLoading]=useContext(LoadingContext);\r\nconst [URL, setUrl]=useContext(URLContext);\r\nconst prevSurah = usePrevious(SurahNo);\r\n \r\n\r\n  useEffect(() => {\r\n   \r\n    const fetchChapters = async()=>{\r\n      fetch(`${URL}chapters?language=${lang}`)\r\n      .then(res =>res.json())\r\n      .then(data=>setHome(data.chapters));\r\n    }\r\n  \r\n    const fetchData = async() => {\r\n  \r\n       fetch( `${URL}chapters/${SurahNo}/verses?language=${lang}`)\r\n       .then(res =>res.json())\r\n       .then(dat=>setVerses(dat.verses));\r\n        fetch( `${URL}chapters/${SurahNo}/info`)\r\n         .then(res =>res.json())\r\n         .then(dat=>{setInfo(dat.chapter_info);});\r\n    \r\n        }\r\n       fetchData();\r\n       fetchChapters();\r\n              },[SurahNo,lang]);\r\n\r\n\r\n  function usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n  }\r\n           \r\n           \r\n\r\n  return (\r\n\r\n<>\r\n<Helmet>\r\n <title> Islam Check | {(ChapData)? ChapData[SurahNo-1][\"name_simple\"]:\"\"}</title> \r\n</Helmet>\r\n  <Header ChapData={ChapData} VerseTotal={(Verses)? Verses.total:\"\"}/>\r\n  <Main info={info} Content={(Verses)? Verses:\"\"} ChapData={ChapData}/>\r\n<Footer/> \r\n</>\r\n   \r\n  \r\n    \r\n  );\r\n  }\r\nexport default Homepage;\r\n"]},"metadata":{},"sourceType":"module"}