{"version":3,"sources":["webpack://cassettePlayer/webpack/universalModuleDefinition","webpack://cassettePlayer/webpack/bootstrap","webpack://cassettePlayer/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassettePlayer/external {\"root\":\"cassetteCore\",\"commonjs\":\"@cassette/core\",\"commonjs2\":\"@cassette/core\",\"amd\":\"@cassette/core\"}","webpack://cassettePlayer/external {\"root\":\"cassetteComponents\",\"commonjs\":\"@cassette/components\",\"commonjs2\":\"@cassette/components\",\"amd\":\"@cassette/components\"}","webpack://cassettePlayer/./node_modules/material-design-icons/av/svg/design/ic_volume_off_48px.svg","webpack://cassettePlayer/./node_modules/material-design-icons/av/svg/design/ic_volume_mute_48px.svg","webpack://cassettePlayer/./node_modules/material-design-icons/av/svg/design/ic_volume_down_48px.svg","webpack://cassettePlayer/./node_modules/material-design-icons/av/svg/design/ic_volume_up_48px.svg","webpack://cassettePlayer/./node_modules/material-design-icons/av/svg/design/ic_repeat_48px.svg","webpack://cassettePlayer/./node_modules/material-design-icons/av/svg/design/ic_repeat_one_48px.svg","webpack://cassettePlayer/./node_modules/material-design-icons/av/svg/design/ic_shuffle_48px.svg","webpack://cassettePlayer/./node_modules/material-design-icons/navigation/svg/design/ic_fullscreen_48px.svg","webpack://cassettePlayer/./node_modules/material-design-icons/navigation/svg/design/ic_fullscreen_exit_48px.svg","webpack://cassettePlayer/./src/utils/classNames.js","webpack://cassettePlayer/./src/controls/common/ButtonWrapper.js","webpack://cassettePlayer/./src/controls/PlayPauseButton.js","webpack://cassettePlayer/./src/controls/common/SkipButton.js","webpack://cassettePlayer/./src/controls/BackSkipButton.js","webpack://cassettePlayer/./src/controls/ForwardSkipButton.js","webpack://cassettePlayer/./src/utils/getVolumeIconComponent.js","webpack://cassettePlayer/./src/utils/getVolumeBarDirectionFromPosition.js","webpack://cassettePlayer/./src/utils/reactStopPropagation.js","webpack://cassettePlayer/./src/controls/VolumeControl.js","webpack://cassettePlayer/./src/controls/MuteButton.js","webpack://cassettePlayer/./src/controls/RepeatButton.js","webpack://cassettePlayer/./src/controls/ShuffleButton.js","webpack://cassettePlayer/./src/controls/common/MediaStatusBar.js","webpack://cassettePlayer/./src/utils/convertToTime.js","webpack://cassettePlayer/./src/controls/MediaProgress.js","webpack://cassettePlayer/./src/controls/MediaProgressDisplay.js","webpack://cassettePlayer/./src/controls/FullscreenButton.js","webpack://cassettePlayer/./src/controls/Spacer.js","webpack://cassettePlayer/./src/utils/getControlRenderProp.js","webpack://cassettePlayer/./src/MediaPlayerControls.js","webpack://cassettePlayer/./src/MediaPlayer.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","RepeatIcon","props","createElement","fill","defaultProps","width","height","viewBox","default","RepeatOneIcon","ShuffleIcon","FullscreenIcon","FullscreenExitIcon","reduceHash","obj","keys","filter","join","utils_classNames","_len","arguments","length","args","Array","_key","map","Boolean","common_ButtonWrapper","external_root_React_commonjs_react_commonjs2_react_amd_react_","_ref","ref","className","children","rest","_objectWithoutPropertiesLoose","external_root_React_commonjs_react_commonjs2_react_amd_react_default","a","_extends","PlayPauseButton_PlayPauseButton","_PureComponent","PlayPauseButton","apply","_inheritsLoose","render","_this$props","paused","awaitingPlayResume","activeTrackIndex","onTogglePause","onSelectTrackIndex","_this$props$trackInde","trackIndex","isCurrent","type","playing","onClick","controls_PlayPauseButton","core_","common_SkipButton","SkipButton","SkipButton_inheritsLoose","back","BackSkipButton_BackSkipButton","BackSkipButton","BackSkipButton_inheritsLoose","onBackSkip","controls_BackSkipButton","ForwardSkipButton_ForwardSkipButton","ForwardSkipButton","ForwardSkipButton_inheritsLoose","onForwardSkip","controls_ForwardSkipButton","utils_getVolumeIconComponent","volume","muted","ic_volume_off_48px_default","ic_volume_mute_48px_default","ic_volume_down_48px_default","ic_volume_up_48px_default","utils_getVolumeBarDirectionFromPosition","volumeBarPosition","reactStopPropagation","e","stopPropagation","nativeEvent","stopImmediatePropagation","volumeControlStyle","touchAction","volumeBarContainerHiddenStyle","opacity","VolumeControl_VolumeControl","VolumeControl","_this","state","hover","volumeBarFocused","volumeControlRef","muteToggleRef","volumeBarContainerRef","setVolumeControlRef","_assertThisInitialized","setMuteToggleRef","setVolumeBarContainerRef","handleMouseEnter","handleMouseLeave","handleVolumeBarFocus","handleVolumeBarBlur","handleMuteToggleTouchStart","VolumeControl_inheritsLoose","getDerivedStateFromProps","setVolumeInProgress","_proto","componentDidMount","addEventListener","document","componentDidUpdate","newPosition","volumeControlRect","getBoundingClientRect","top","volumeBarContainerHeight","offsetHeight","documentElement","clientHeight","bottom","setState","componentWillUnmount","removeEventListener","_this2","_this3","preventDefault","renderHandle","highlight","onSetVolume","onSetVolumeComplete","onToggleMuted","_this$state","VolumeIcon","style","onMouseEnter","onMouseLeave","onTouchStart","on","undefined","onFocus","onBlur","components_","progressClassName","progress","progressDirection","handle","onAdjustProgress","onAdjustComplete","controls_VolumeControl","MuteButton_MuteButton","MuteButton","MuteButton_inheritsLoose","controls_MuteButton","RepeatButton_RepeatButton","RepeatButton","handleNextRepeatStrategy","RepeatButton_assertThisInitialized","RepeatButton_inheritsLoose","onSetRepeatStrategy","repeatStrategy","nextIndex","indexOf","getNextRepeatStrategy","Icon","ic_repeat_one_48px_default","ic_repeat_48px_default","controls_RepeatButton","ShuffleButton_ShuffleButton","ShuffleButton","ShuffleButton_inheritsLoose","shuffle","onToggleShuffle","ic_shuffle_48px_default","controls_ShuffleButton","common_MediaStatusBar","MediaStatusBar","MediaStatusBar_inheritsLoose","displayText","displayTime","content","utils_convertToTime","number","hours","Math","floor","mins","secs","time","mediaStatusBarStyle","pointerEvents","MediaProgress_MediaProgress","MediaProgress","MediaProgress_inheritsLoose","playlist","currentTime","seekPreviewTime","seekInProgress","duration","getDisplayText","_this$props$durationO","durationOverride","controls_MediaProgress","MediaProgressDisplay_MediaProgressDisplay","MediaProgressDisplay","MediaProgressDisplay_inheritsLoose","controls_MediaProgressDisplay","FullscreenButton_FullscreenButton","FullscreenButton","FullscreenButton_inheritsLoose","fullscreen","requestFullscreen","requestExitFullscreen","IconComponent","ic_fullscreen_exit_48px_default","ic_fullscreen_48px_default","controls_FullscreenButton","controls_Spacer","Spacer","Spacer_inheritsLoose","controlComponents","playpause","backskip","forwardskip","mute","repeat","progressdisplay","spacer","cache","utils_getControlRenderProp","control","fn","controlKey","component","playerContext","fullscreenContext","getRenderPropForControlKey","nextControlKey","MediaPlayerControls_MediaPlayerControls","_Component","MediaPlayerControls","MediaPlayerControls_inheritsLoose","getKeyedChildren","elements","controlKeys","Map","elementsRendered","element","nodeName","tag","keyIndex","set","keysForType","toString","concat","cloneElement","controls","showVideo","renderVideoDisplay","Consumer","title","renderControl","src_MediaPlayerControls","MediaPlayer_MediaPlayer","MediaPlayer","MediaPlayer_inheritsLoose","fullscreenEnabled","MediaPlayer_objectWithoutPropertiesLoose","propTypes","_objectSpread","src_MediaPlayer"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,SAAAA,QAAA,kBAAAA,QAAA,yBACA,mBAAAC,eAAAC,IACAD,QAAA,iDAAAJ,GACA,iBAAAC,QACAA,QAAA,eAAAD,EAAAG,QAAA,SAAAA,QAAA,kBAAAA,QAAA,yBAEAJ,EAAA,eAAAC,EAAAD,EAAA,MAAAA,EAAA,aAAAA,EAAA,oBARA,CASC,oBAAAO,UAAAC,KAAA,SAAAC,EAAAC,EAAAC,GACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAZ,QAGA,IAAAC,EAAAS,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAd,YAUA,OANAe,EAAAH,GAAAI,KAAAf,EAAAD,QAAAC,IAAAD,QAAAW,GAGAV,EAAAa,GAAA,EAGAb,EAAAD,QA0DA,OArDAW,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAnB,EAAAoB,EAAAC,GACAV,EAAAW,EAAAtB,EAAAoB,IACAG,OAAAC,eAAAxB,EAAAoB,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAA3B,GACA,oBAAA4B,eAAAC,aACAN,OAAAC,eAAAxB,EAAA4B,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAxB,EAAA,cAAiD8B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAArC,GACA,IAAAoB,EAAApB,KAAAgC,WACA,WAA2B,OAAAhC,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAU,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,QAIAhC,IAAAiC,EAAA,oBClFA3C,EAAAD,QAAAO,iBCAAN,EAAAD,QAAAQ,iBCAAP,EAAAD,QAAAS,mBCAA,IAAAoC,EAAAlC,EAAA,GAEA,SAAAmC,EAAAC,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,sXAAAiB,IAAA,IAAkYS,EAAAG,cAAA,QAA8B7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,MAGxeU,EAAAI,cAA2BC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAE3BpD,EAAAD,QAAA8C,EAEAA,EAAAQ,QAAAR,mBCVA,IAAAD,EAAAlC,EAAA,GAEA,SAAAmC,EAAAC,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,gCAAAiB,IAAA,IAA4CS,EAAAG,cAAA,QAA8B7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,MAGlJU,EAAAI,cAA2BC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAE3BpD,EAAAD,QAAA8C,EAEAA,EAAAQ,QAAAR,mBCVA,IAAAD,EAAAlC,EAAA,GAEA,SAAAmC,EAAAC,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,6FAAAiB,IAAA,IAAyGS,EAAAG,cAAA,QAA8B7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,MAG/MU,EAAAI,cAA2BC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAE3BpD,EAAAD,QAAA8C,EAEAA,EAAAQ,QAAAR,mBCVA,IAAAD,EAAAlC,EAAA,GAEA,SAAAmC,EAAAC,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,2MAAAiB,IAAA,IAAuNS,EAAAG,cAAA,QAA8B7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,MAG7TU,EAAAI,cAA2BC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAE3BpD,EAAAD,QAAA8C,EAEAA,EAAAQ,QAAAR,mBCVA,IAAAD,EAAAlC,EAAA,GAEA,SAAAmC,EAAAC,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,IAA0CS,EAAAG,cAAA,QAA8B7B,EAAA,wEAAAiB,IAAA,MAGhJU,EAAAI,cAA2BC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAE3BpD,EAAAD,QAAA8C,EAEAA,EAAAQ,QAAAR,mBCVA,IAAAD,EAAAlC,EAAA,GAEA,SAAA4C,EAAAR,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,IAA0CS,EAAAG,cAAA,QAA8B7B,EAAA,iGAAAiB,IAAA,MAGhJmB,EAAAL,cAA8BC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAE9BpD,EAAAD,QAAAuD,EAEAA,EAAAD,QAAAC,mBCVA,IAAAV,EAAAlC,EAAA,GAEA,SAAA6C,EAAAT,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,IAA0CS,EAAAG,cAAA,QAA8B7B,EAAA,+KAAAiB,IAAA,MAGhJoB,EAAAN,cAA4BC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAE5BpD,EAAAD,QAAAwD,EAEAA,EAAAF,QAAAE,mBCVA,IAAAX,EAAAlC,EAAA,GAEA,SAAA8C,EAAAV,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,IAA0CS,EAAAG,cAAA,QAA8B7B,EAAA,8FAAAiB,IAAA,MAGhJqB,EAAAP,cAA+BC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAE/BpD,EAAAD,QAAAyD,EAEAA,EAAAH,QAAAG,mBCVA,IAAAZ,EAAAlC,EAAA,GAEA,SAAA+C,EAAAX,GACA,OAAAF,EAAAG,cAAA,MAAAD,GAAAF,EAAAG,cAAA,QAAwE7B,EAAA,gBAAA8B,KAAA,OAAAb,IAAA,IAA0CS,EAAAG,cAAA,QAA8B7B,EAAA,6FAAAiB,IAAA,MAGhJsB,EAAAR,cAAmCC,MAAA,KAAAC,OAAA,KAAAC,QAAA,aAEnCpD,EAAAD,QAAA0D,EAEAA,EAAAJ,QAAAI,4FCDA,SAASC,EAAWC,GAClB,OAAKA,GAAsB,iBAARA,EAGZrC,OAAOsC,KAAKD,GAChBE,OAAO,SAAA1B,GAAG,OAAIwB,EAAIxB,KAClB2B,KAAK,KAJCH,EAOX,IAAAI,EAhBA,WAA6B,QAAAC,EAAAC,UAAAC,OAANC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GAC3B,OAAOF,EACJG,IAAIZ,GACJG,OAAOU,SACPT,KAAK,qNCDV,IAiBAU,EAjBsBlD,OAAAmD,EAAA,WAAAnD,CAAW,SAAAoD,EAAmCC,GAAQ,IAAxCC,EAAwCF,EAAxCE,UAAWC,EAA6BH,EAA7BG,SAAaC,sIAAgBC,CAAAL,GAAA,yBAC1E,OACEM,EAAAC,EAAAlC,cAAA,MAAAmC,GACEP,IAAKA,EACLC,UAAWb,EAAW,iCAAkCa,IACpDE,GAEHD,KCDP,IAAaM,EAAb,SAAAC,GAAA,SAAAC,IAAA,OAAAD,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAAkF,CAAAF,EAAAD,GAAAC,EAAA7C,UACEgD,OAAA,WAAS,IAAAC,EAQHpF,KAAKyC,MANP4C,EAFKD,EAELC,OACAC,EAHKF,EAGLE,mBACAC,EAJKH,EAILG,iBACAC,EALKJ,EAKLI,cACAC,EANKL,EAMLK,mBANKC,EAAAN,EAOLO,kBAPK,IAAAD,EAOQH,EAPRG,EASDE,EAAYL,IAAqBI,EACvC,OACEhB,EAAAC,EAAAlC,cAACyB,EAAD,KACEQ,EAAAC,EAAAlC,cAAA,UACEmD,KAAK,SACLtB,UAAWb,EACT,sDAEEoC,QAASF,KAAeP,GAAUC,KAGtCS,QACEH,EAAYJ,EAAgB,kBAAMC,EAAmBE,KAGvDhB,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,cACbI,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,SACfI,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,cA3B3BS,EAAA,CAAqCZ,EAAA,eAkDrC4B,EAAe/E,OAAAgF,EAAA,oBAAf,CAAmCnB,GACjC,SACA,qBACA,mBACA,gBACA,uBC5DF,IA+BAoB,EA/BA,SAAAnB,GAAA,SAAAoB,IAAA,OAAApB,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAAoG,CAAAD,EAAApB,GAAAoB,EAAAhE,UACEgD,OAAA,WAAS,IAAAC,EACmBpF,KAAKyC,MAAvB4D,EADDjB,EACCiB,KAAMN,EADPX,EACOW,QACd,OACEpB,EAAAC,EAAAlC,cAACyB,EAAD,KACEQ,EAAAC,EAAAlC,cAAA,UACEmD,KAAK,SACLtB,UAAWb,EACT,gDAEE2C,SAGJN,QAASA,GAETpB,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,gCACbI,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,0BACfI,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,0BACfI,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,qBAlB3B4B,EAAA,CAAgC/B,EAAA,eCIhC,IAAakC,EAAb,SAAAvB,GAAA,SAAAwB,IAAA,OAAAxB,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAAwG,CAAAD,EAAAxB,GAAAwB,EAAApE,UACEgD,OAAA,WACE,OAAOR,EAAAC,EAAAlC,cAACwD,GAAWG,MAAI,EAACN,QAAS/F,KAAKyC,MAAMgE,cAFhDF,EAAA,CAAoCnC,EAAA,eAUpCsC,EAAezF,OAAAgF,EAAA,oBAAf,CAAmCK,GAAiB,eCVpD,IAAaK,EAAb,SAAA5B,GAAA,SAAA6B,IAAA,OAAA7B,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAA6G,CAAAD,EAAA7B,GAAA6B,EAAAzE,UACEgD,OAAA,WACE,OAAOR,EAAAC,EAAAlC,cAACwD,GAAWH,QAAS/F,KAAKyC,MAAMqE,iBAF3CF,EAAA,CAAuCxC,EAAA,eAUvC2C,EAAe9F,OAAAgF,EAAA,oBAAf,CAAmCU,GAAoB,kFCFvD,IAAAK,EAbA,SAAgCC,EAAQC,GACtC,OAAIA,EACKC,EAAAvC,EAEM,IAAXqC,EACKG,EAAAxC,EAELqC,GAAU,GACLI,EAAAzC,EAEF0C,EAAA1C,GCHT,IAAA2C,EAZA,SAA2CC,GACzC,OAAQA,GACN,IAAK,aACL,IAAK,aACH,MAAO,QACT,IAAK,WACL,IAAK,UACL,QACE,MAAO,OCHb,IAAAC,EALA,SAAyBC,GACvBA,EAAEC,kBACFD,EAAEE,YAAYC,uJCUhB,IAAMC,GACJC,YAAa,QAGTC,GACJC,QAAS,GAMEC,EAAb,SAAAnD,GAgBE,SAAAoD,EAAY1F,GAAO,IAAA2F,EAAA,OACjBA,EAAArD,EAAArE,KAAAV,KAAMyC,IAANzC,MAEKqI,OACHC,OAAO,EACPC,kBAAkB,EAElBf,kBAAmB,MAGrBY,EAAKI,iBAAmB,KACxBJ,EAAKK,cAAgB,KACrBL,EAAKM,sBAAwB,KAG7BN,EAAKO,oBAAsBP,EAAKO,oBAAoB5G,KAAzB6G,IAAAR,KAC3BA,EAAKS,iBAAmBT,EAAKS,iBAAiB9G,KAAtB6G,IAAAR,KACxBA,EAAKU,yBAA2BV,EAAKU,yBAAyB/G,KAA9B6G,IAAAR,KAChCA,EAAKW,iBAAmBX,EAAKW,iBAAiBhH,KAAtB6G,IAAAR,KACxBA,EAAKY,iBAAmBZ,EAAKY,iBAAiBjH,KAAtB6G,IAAAR,KACxBA,EAAKa,qBAAuBb,EAAKa,qBAAqBlH,KAA1B6G,IAAAR,KAC5BA,EAAKc,oBAAsBd,EAAKc,oBAAoBnH,KAAzB6G,IAAAR,KAG3BA,EAAKe,2BAA6Bf,EAAKe,2BAA2BpH,KAAhC6G,IAAAR,KAxBjBA,gGAhBrBgB,CAAAjB,EAAApD,GAAAoD,EACSkB,yBAAP,SAAgC5G,EAAO4F,GAAO,IACpCC,EAA+CD,EAA/CC,MAAOC,EAAwCF,EAAxCE,iBACf,OADuDF,EAAtBb,mBAG9Bc,GACAC,GACA9F,EAAM6G,oBAMF,MAHH9B,kBAAmB,OAV3B,IAAA+B,EAAApB,EAAAhG,UAAA,OAAAoH,EA6CEC,kBAAA,WAKExJ,KAAKyI,cAAcgB,iBACjB,aACAzJ,KAAKmJ,4BAKPO,SAASD,iBAAiB,aAAczJ,KAAKgJ,mBAzDjDO,EA4DEI,mBAAA,WAAqB,IAaXnC,EAAsBxH,KAAKqI,MAA3Bb,kBACR,GACwB,aAAtBA,GACsB,gBAAtBA,EACA,CACA,IAGIoC,EAHEC,EAAoB7J,KAAKwI,iBAAiBsB,wBAC1CC,EAAMF,EAAkBE,IACxBC,EAA2BhK,KAAK0I,sBAAsBuB,aAE5D,GAA0B,aAAtBzC,EACFoC,EACEI,GAA4BD,EAAM,UAAY,mBAEhD,GAAIC,GAA4BD,EAC9BH,EAAc,kBAIdA,EACEI,GAHqBN,SAASQ,gBAAgBC,aAChBN,EAAkBO,OAEX,aAAe,KAG1DpK,KAAKqK,UACH7C,kBAAmBoC,MAhG3BL,EAqGEe,qBAAA,WACEtK,KAAKyI,cAAc8B,oBACjB,aACAvK,KAAKmJ,4BAEPO,SAASa,oBAAoB,aAAcvK,KAAKgJ,mBA1GpDO,EA6GEZ,oBAAA,SAAoBrE,GAClBtE,KAAKwI,iBAAmBlE,GA9G5BiF,EAiHEV,iBAAA,SAAiBvE,GACftE,KAAKyI,cAAgBnE,GAlHzBiF,EAqHET,yBAAA,SAAyBxE,GACvBtE,KAAK0I,sBAAwBpE,GAtHjCiF,EAyHER,iBAAA,WACE/I,KAAKqK,SAAS,SAAAhC,GAAK,OACjBC,OAAO,EACPd,kBAAmBa,EAAMb,mBAAqB,eA5HpD+B,EAgIEP,iBAAA,WAAmB,IAAAwB,EAAAxK,KACjBA,KAAKqK,SAAS,SAAAhC,GAAK,OACjBC,OAAO,EACPd,kBACEa,EAAME,kBAAoBiC,EAAK/H,MAAM6G,oBACjCjB,EAAMb,kBACN,SAtIZ+B,EA0IEN,qBAAA,WACEjJ,KAAKqK,SAAS,SAAAhC,GAAK,OACjBE,kBAAkB,EAClBf,kBAAmBa,EAAMb,mBAAqB,eA7IpD+B,EAiJEL,oBAAA,WAAsB,IAAAuB,EAAAzK,KACpBA,KAAKqK,SAAS,SAAAhC,GAAK,OACjBE,kBAAkB,EAClBf,kBACEa,EAAMC,OAASmC,EAAKhI,MAAM6G,oBACtBjB,EAAMb,kBACN,SAvJZ+B,EA2JEJ,2BAAA,SAA2BzB,GACpB1H,KAAKqI,MAAMC,OAAUtI,KAAKqI,MAAME,mBACnCb,EAAEgD,iBACF1K,KAAK+I,qBA9JXQ,EAkKEoB,aAAA,WACE,OACEhG,EAAAC,EAAAlC,cAAA,OACE6B,UAAWb,EAAW,UACpBkH,UAAW5K,KAAKyC,MAAM6G,uBAGxB3E,EAAAC,EAAAlC,cAAA,cAzKR6G,EA8KEpE,OAAA,WAAS,IAAAC,EAOHpF,KAAKyC,MALPwE,EAFK7B,EAEL6B,OACAC,EAHK9B,EAGL8B,MACA2D,EAJKzF,EAILyF,YACAC,EALK1F,EAKL0F,oBACAC,EANK3F,EAML2F,cANKC,EAQgDhL,KAAKqI,MAApDC,EARD0C,EAQC1C,MAAOC,EARRyC,EAQQzC,iBAAkBf,EAR1BwD,EAQ0BxD,kBAC3ByD,EAAajE,EAAuBC,EAAQC,GAClD,OACEvC,EAAAC,EAAAlC,cAACyB,GACCG,IAAKtE,KAAK2I,oBACVpE,UAAU,2BACV2G,MAAOpD,EACPqD,aAAcnL,KAAK+I,iBACnBqC,aAAcpL,KAAKgJ,iBACnBqC,aAAc5D,GAEd9C,EAAAC,EAAAlC,cAAA,UACE4B,IAAKtE,KAAK6I,iBACVhD,KAAK,SACLtB,UAAWb,EACT,uEAEEkH,UAAWtC,GAASC,EACpB+C,IAAKpE,IAGTnB,QAASgF,GAETpG,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,oBACbI,EAAAC,EAAAlC,cAACuI,GAAWpI,MAAM,OAAOC,OAAO,WAGpC6B,EAAAC,EAAAlC,cAAA,OACEwI,MAAO1D,OAAoB+D,EAAYvD,EACvC1D,IAAKtE,KAAK8I,yBACVvE,UAAWb,EACT,iDACA8D,GAEFgE,QAASxL,KAAKiJ,qBACdwC,OAAQzL,KAAKkJ,qBAEbvE,EAAAC,EAAAlC,cAACgJ,EAAA,aACCnH,UAAWb,EACT,uCACA8D,GAEFmE,kBAAkB,SAClBC,SAAU1E,EAAQ,EAAID,EACtB4E,kBAAmBtE,EACjBC,GAEFsE,OAAQ9L,KAAK2K,eACboB,iBAAkBlB,EAClBmB,iBAAkBlB,OAvO9B3C,EAAA,CAAmC/D,EAAA,eAwPnC6H,EAAehL,OAAAgF,EAAA,oBAAf,CAAmCiC,GACjC,SACA,QACA,sBACA,cACA,sBACA,kBCzQF,IAAagE,EAAb,SAAAnH,GAAA,SAAAoH,IAAA,OAAApH,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAAoM,CAAAD,EAAApH,GAAAoH,EAAAhK,UACEgD,OAAA,WAAS,IAAAC,EACkCpF,KAAKyC,MAAtCwE,EADD7B,EACC6B,OAAQC,EADT9B,EACS8B,MAAO6D,EADhB3F,EACgB2F,cACjBE,EAAajE,EAAuBC,EAAQC,GAClD,OACEvC,EAAAC,EAAAlC,cAACyB,EAAD,KACEQ,EAAAC,EAAAlC,cAAA,UACEmD,KAAK,SACLtB,UAAWb,EACT,uEACE4H,IAAKpE,IAETnB,QAASgF,GAETpG,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,oBACbI,EAAAC,EAAAlC,cAACuI,GAAWpI,MAAM,OAAOC,OAAO,aAf5CqJ,EAAA,CAAgC/H,EAAA,eA6BhCiI,EAAepL,OAAAgF,EAAA,oBAAf,CAAmCiG,GACjC,SACA,QACA,6KCnBF,IAAaI,EAAb,SAAAvH,GACE,SAAAwH,EAAY9J,GAAO,IAAA2F,EAAA,OACjBA,EAAArD,EAAArE,KAAAV,KAAMyC,IAANzC,MAGKwM,yBAA2BpE,EAAKoE,yBAAyBzK,KAA9B0K,IAAArE,KAJfA,gGADrBsE,CAAAH,EAAAxH,GAAA,IAAAwE,EAAAgD,EAAApK,UAAA,OAAAoH,EAQEiD,yBAAA,WACExM,KAAKyC,MAAMkK,oBApBf,SAA+BC,GAC7B,IAAIC,EAAY5G,EAAA,sBAAsB6G,QAAQF,GAAkB,EAIhE,OAHIC,GAAa5G,EAAA,sBAAsBpC,SACrCgJ,EAAY,GAEP5G,EAAA,sBAAsB4G,GAgBzBE,CAAsB/M,KAAKyC,MAAMmK,kBAVvCrD,EAcEpE,OAAA,WAAS,IACCyH,EAAmB5M,KAAKyC,MAAxBmK,eACFI,EAA0B,UAAnBJ,EAA6BK,EAAArI,EAAgBsI,EAAAtI,EAC1D,OACED,EAAAC,EAAAlC,cAACyB,EAAD,KACEQ,EAAAC,EAAAlC,cAAA,UACEmD,KAAK,SACLtB,UAAWb,EACT,yEACE4H,GAAuB,SAAnBsB,IAER7G,QAAS/F,KAAKwM,0BAEd7H,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,oBACbI,EAAAC,EAAAlC,cAACsK,GAAKnK,MAAM,OAAOC,OAAO,aA5BtCyJ,EAAA,CAAkCnI,EAAA,eAyClC+I,EAAelM,OAAAgF,EAAA,oBAAf,CAAmCqG,GACjC,iBACA,wCCxDF,IAAac,EAAb,SAAArI,GAAA,SAAAsI,IAAA,OAAAtI,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAAsN,CAAAD,EAAAtI,GAAAsI,EAAAlL,UACEgD,OAAA,WAAS,IAAAC,EAC8BpF,KAAKyC,MAAlC8K,EADDnI,EACCmI,QAASC,EADVpI,EACUoI,gBACjB,OACE7I,EAAAC,EAAAlC,cAACyB,EAAD,KACEQ,EAAAC,EAAAlC,cAAA,UACEmD,KAAK,SACLtB,UAAWb,EACT,0EACE4H,GAAIiC,IAERxH,QAASyH,GAET7I,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,oBACbI,EAAAC,EAAAlC,cAAC+K,EAAA7I,GAAY/B,MAAM,OAAOC,OAAO,aAd7CuK,EAAA,CAAmCjJ,EAAA,eA2BnCsJ,EAAezM,OAAAgF,EAAA,oBAAf,CAAmCmH,GACjC,UACA,oBCpCF,IAoBAO,EApBA,SAAA5I,GAAA,SAAA6I,IAAA,OAAA7I,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAA6N,CAAAD,EAAA7I,GAAA6I,EAAAzL,UACEgD,OAAA,WAAS,IAAAC,EACqCpF,KAAKyC,MAAzCyI,EADD9F,EACC8F,MAAO4C,EADR1I,EACQ0I,YAAaC,EADrB3I,EACqB2I,YAC5B,OACEpJ,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,6BAA6B2G,MAAOA,GACjDvG,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,gCACbI,EAAAC,EAAAlC,cAACgJ,EAAA,cAAasC,QAASF,KAEzBnJ,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,iCAAiCwJ,KARxDH,EAAA,CAAoCxJ,EAAA,eCQpC,IAAA6J,EAVA,SAAuBC,GACrB,IAAMC,EAAQC,KAAKC,MAAMH,EAAM,MACzBI,EAAOF,KAAKC,MAAMH,EAAS,IAAc,GAARC,EACjCI,EAAOH,KAAKC,MAAMH,EAAS,IAC7BM,EAAOL,EAAQ,EAAOA,EAAf,IAA0B,GAGrC,OAFAK,IAAWF,EAAO,IAAMH,EAAQ,EAAI,IAAM,IAAKG,EAA3C,IACJE,IAAWD,EAAO,GAAK,IAAM,IAAKA,GCIpC,IAAME,GACJC,cAAe,QAMJC,EAAb,SAAA5J,GAAA,SAAA6J,IAAA,OAAA7J,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAA6O,CAAAD,EAAA7J,GAAA6J,EAAAzM,UACEgD,OAAA,WAAS,IAAAC,EAUHpF,KAAKyC,MARPqM,EAFK1J,EAEL0J,SACAvJ,EAHKH,EAGLG,iBACAwJ,EAJK3J,EAIL2J,YACAC,EALK5J,EAKL4J,gBACAC,EANK7J,EAML6J,eACAC,EAPK9J,EAOL8J,SACAC,EARK/J,EAQL+J,eARKC,EAAAhK,EASLiK,wBATK,IAAAD,EAScF,EATdE,EAWDZ,EAAOS,EAAiBD,EAAkBD,EAChD,OACEpK,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,sCACbI,EAAAC,EAAAlC,cAACgJ,EAAA,kBACCnH,UAAU,+BACVoH,kBAAkB,WAClBE,kBAAkB,UAEpBlH,EAAAC,EAAAlC,cAACiL,GACCzC,MAAOuD,EACPX,YAAaqB,EAAeL,EAASvJ,KAAsB,GAC3DwI,YAAgBE,EAAcO,GAAnB,MAA8BP,EACvCoB,OAxBZT,EAAA,CAAmCxK,EAAA,eAmDnCuK,EAAc/L,cACZuM,eAAgBlJ,EAAA,gBAGlB,IAAAqJ,EAAerO,OAAAgF,EAAA,oBAAf,CAAmC0I,GACjC,WACA,mBACA,cACA,kBACA,iBACA,aCjEF,IAAaY,EAAb,SAAAxK,GAAA,SAAAyK,IAAA,OAAAzK,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAAyP,CAAAD,EAAAzK,GAAAyK,EAAArN,UACEgD,OAAA,WAAS,IAAAC,EAQHpF,KAAKyC,MANPqM,EAFK1J,EAEL0J,SACAvJ,EAHKH,EAGLG,iBACAwJ,EAJK3J,EAIL2J,YACAG,EALK9J,EAKL8J,SACAC,EANK/J,EAML+J,eANKC,EAAAhK,EAOLiK,wBAPK,IAAAD,EAOcF,EAPdE,EASP,OACEzK,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,sCACbI,EAAAC,EAAAlC,cAACgJ,EAAA,yBACCnH,UAAU,+BACVoH,kBAAkB,WAClBE,kBAAkB,UAEpBlH,EAAAC,EAAAlC,cAACiL,GACCG,YAAaqB,EAAeL,EAASvJ,KAAsB,GAC3DwI,YAAgBE,EAAcc,GAAnB,MAAqCd,EAC9CoB,OApBZG,EAAA,CAA0CpL,EAAA,eA+C1CmL,EAAqB3M,cACnBuM,eAAgBlJ,EAAA,gBAGlB,IAAAyJ,EAAezO,OAAAgF,EAAA,oBAAf,CAAmCsJ,GACjC,WACA,mBACA,cACA,qDC1DF,IAAaI,GAAb,SAAA5K,GAAA,SAAA6K,IAAA,OAAA7K,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAA6P,CAAAD,EAAA7K,GAAA6K,EAAAzN,UACEgD,OAAA,WAAS,IAAAC,EAC0DpF,KAAKyC,MAA9DqN,EADD1K,EACC0K,WAAYC,EADb3K,EACa2K,kBAAmBC,EADhC5K,EACgC4K,sBACjCC,EAAgBH,EAAaI,GAAAtL,EAAqBuL,GAAAvL,EACxD,OACED,EAAAC,EAAAlC,cAACyB,EAAD,KACEQ,EAAAC,EAAAlC,cAAA,UACEmD,KAAK,SACLtB,UAAWb,EACT,6EACE4H,GAAIwE,IAER/J,QAAS+J,EAAaE,EAAwBD,GAE9CpL,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,oBACbI,EAAAC,EAAAlC,cAACuN,GAAcpN,MAAM,OAAOC,OAAO,aAf/C8M,EAAA,CAAsCxL,EAAA,eA6BtCgM,GAAenP,OAAAgF,EAAA,oBAAf,CAAmC0J,IACjC,aACA,oBACA,0BCtCF,IAUAU,GAVA,SAAAtL,GAAA,SAAAuL,IAAA,OAAAvL,EAAAE,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAAuQ,CAAAD,EAAAvL,GAAAuL,EAAAnO,UACEgD,OAAA,WACE,OACER,EAAAC,EAAAlC,cAACyB,EAAD,KACEQ,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,uBAJvB+L,EAAA,CAA4BlM,EAAA,eCOtBoM,IACJC,UAAWzK,EACX0K,SAAUhK,EACViK,YAAa5J,EACbE,OAAQgF,EACR2E,KAAMvE,EACNwE,OAAQ1D,EACRI,QAASG,EACT9B,SAAU0D,EACVwB,gBAAiBpB,EACjBI,WAAYM,GACZW,OAAQV,IAmBV,IAAMW,MAgBN,IAAAC,GAfA,SAA8BC,GAC5B,GAAuB,mBAAZA,EACT,OAAOA,EAET,GAAuB,iBAAZA,EAAsB,CAC/B,GAAIF,GAAME,GACR,OAAOF,GAAME,GAEf,IAAMC,EAzBV,SAAoCC,GAClC,IAAMC,EAAYb,GAAkBY,GACpC,IAAKC,EACH,OAAO,KAET,OAAQD,GACN,IAAK,WACL,IAAK,kBACH,OAAO,SAACE,EAAeC,EAAhBlN,GAA0D,IAArB8K,EAAqB9K,EAArB8K,eAC1C,OAAOlO,OAAAmD,EAAA,cAAAnD,CAAcoQ,GAAalC,oBAEtC,QACE,OAAO,kBAAMlO,OAAAmD,EAAA,cAAAnD,CAAcoQ,KAalBG,CAA2BN,GAEtC,OADAF,GAAME,GAAWC,EACVA,EAET,OAAO,YC1CT,IAAIM,GAAiB,EAQrB,IAAaC,GAAb,SAAAC,GAAA,SAAAC,IAAA,OAAAD,EAAA1M,MAAAjF,KAAA4D,YAAA5D,mGAAA6R,CAAAD,EAAAD,GAAA,IAAApI,EAAAqI,EAAAzP,UAAA,OAAAoH,EACEuI,iBAAA,SAAiBC,GAAU,IAAA3J,EAAApI,KAGzBA,KAAKgS,YAAchS,KAAKgS,aAAe,IAAIC,IAG3C,IAAMC,EAAmB,IAAID,IAE7B,OAAOF,EAAS9N,IAAI,SAAAkO,GAClB,IAAKA,EACH,OAAOA,EAIT,IAAMtM,EAAOsM,EAAQtM,MAAQsM,EAAQC,UAAYD,EAAQE,KAAO,GAG1DC,EAAWJ,EAAiB9Q,IAAIyE,IAAS,EAC/CqM,EAAiBK,IAAI1M,EAAMyM,EAAW,GAEtC,IAEIxQ,EAFE0Q,EAAcpK,EAAK4J,YAAY5Q,IAAIyE,OAUzC,OAPI2M,EAAYF,GACdxQ,EAAM0Q,EAAYF,IAElBxQ,GAjCE2P,MAAkBgB,WAkCpBrK,EAAK4J,YAAYO,IAAI1M,EAAM2M,EAAYE,OAAO5Q,KAGzC6C,EAAAC,EAAM+N,aAAaR,GAAWrQ,WA/B3CyH,EAmCEpE,OAAA,WAAS,IAAAqF,EAAAxK,KAAAoF,EAMHpF,KAAKyC,MAJP0M,EAFK/J,EAEL+J,eACAyD,EAHKxN,EAGLwN,SACAC,EAJKzN,EAILyN,UACAC,EALK1N,EAKL0N,mBAGF,OACEnO,EAAAC,EAAAlC,cAACuD,EAAA,0BAAD,KACG,SAAAsL,GAAiB,OAChB5M,EAAAC,EAAAlC,cAACuD,EAAA,uBAAc8M,SAAf,KACG,SAAAzB,GAAa,OACZ3M,EAAAC,EAAAlC,cAAA,OAAK6B,UAAU,YACZsO,GACCC,EAAmBxB,EAAeC,GACpC5M,EAAAC,EAAAlC,cAAA,OACE6B,UAAU,wBACVyO,MAAO7D,EACLmC,EAAcxC,SAASwC,EAAc/L,oBAGtCiF,EAAKsH,iBACJc,EAAS3O,IAAI,SAAAiN,GACX,IAAM+B,EAAgBhC,GAAqBC,GAC3C,OACE+B,GACAA,EAAc3B,EAAeC,GAC3BpC,6BA/D1ByC,EAAA,CAAyCxN,EAAA,WA+FzCsN,GAAoB9O,cAClBgQ,UACE,SACA,WACA,YACA,cACA,SACA,YAEFzD,eAAgBlJ,EAAA,eAChB4M,WAAW,EAEXC,mBAZiC,SAYdxB,EAAeC,GAChC,OACE5M,EAAAC,EAAAlC,cAACgJ,EAAA,cACCnH,UAAU,oCACVwB,QAASuL,EAAc9L,kBAM/B,IAAA0N,GAAA,4HChIA,IAAaC,GAAb,SAAAxB,GAAA,SAAAyB,IAAA,OAAAzB,EAAA1M,MAAAjF,KAAA4D,YAAA5D,KAAA,oGAAAqT,CAAAD,EAAAzB,GAAAyB,EAAAjR,UACEgD,OAAA,WAAS,IAAAC,EAQHpF,KAAKyC,MANP0M,EAFK/J,EAEL+J,eACAyD,EAHKxN,EAGLwN,SACAC,EAJKzN,EAILyN,UACAC,EALK1N,EAKL0N,mBACAQ,EANKlO,EAMLkO,kBACG7O,sIAPE8O,CAAAnO,GAAA,mFASP,OACET,EAAAC,EAAAlC,cAACuD,EAAA,2BAA0BqN,kBAAmBA,GAC5C3O,EAAAC,EAAAlC,cAACuD,EAAA,sBAA0BxB,EACzBE,EAAAC,EAAAlC,cAACwQ,IACC/D,eAAgBA,EAChByD,SAAUA,EACVC,UAAWA,EACXC,mBAAoBA,OAjBhCM,EAAA,CAAiChP,EAAA,kBA8B1B+O,GAAYK,UAAUhP,SAE7B2O,GAAYvQ,gVAAZ6Q,IACKxN,EAAA,sBAAsBrD,aACtBsQ,GAAoBtQ,aACpBqD,EAAA,0BAA0BrD,qBAExBuQ,GAAYvQ,aAAa4B,SAEhC,IAAAkP,GAAA","file":"es5/cassette-player.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"@cassette/core\"), require(\"@cassette/components\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"@cassette/core\", \"@cassette/components\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassettePlayer\"] = factory(require(\"react\"), require(\"@cassette/core\"), require(\"@cassette/components\"));\n\telse\n\t\troot[\"cassettePlayer\"] = factory(root[\"React\"], root[\"cassetteCore\"], root[\"cassetteComponents\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","var React = require('react');\n\nfunction RepeatIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13c2.75-.63 5.26-1.89 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":1})]);\n}\n\nRepeatIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = RepeatIcon;\n\nRepeatIcon.default = RepeatIcon;\n","var React = require('react');\n\nfunction RepeatIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M14 18v12h8l10 10V8L22 18h-8z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":1})]);\n}\n\nRepeatIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = RepeatIcon;\n\nRepeatIcon.default = RepeatIcon;\n","var React = require('react');\n\nfunction RepeatIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":1})]);\n}\n\nRepeatIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = RepeatIcon;\n\nRepeatIcon.default = RepeatIcon;\n","var React = require('react');\n\nfunction RepeatIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":1})]);\n}\n\nRepeatIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = RepeatIcon;\n\nRepeatIcon.default = RepeatIcon;\n","var React = require('react');\n\nfunction RepeatIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\",\"key\":1})]);\n}\n\nRepeatIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = RepeatIcon;\n\nRepeatIcon.default = RepeatIcon;\n","var React = require('react');\n\nfunction RepeatOneIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8zm-8-4V18h-2l-4 2v2h3v8h3z\",\"key\":1})]);\n}\n\nRepeatOneIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = RepeatOneIcon;\n\nRepeatOneIcon.default = RepeatOneIcon;\n","var React = require('react');\n\nfunction ShuffleIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\",\"key\":1})]);\n}\n\nShuffleIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = ShuffleIcon;\n\nShuffleIcon.default = ShuffleIcon;\n","var React = require('react');\n\nfunction FullscreenIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\",\"key\":1})]);\n}\n\nFullscreenIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = FullscreenIcon;\n\nFullscreenIcon.default = FullscreenIcon;\n","var React = require('react');\n\nfunction FullscreenExitIcon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h48v48H0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\",\"key\":1})]);\n}\n\nFullscreenExitIcon.defaultProps = {\"width\":\"48\",\"height\":\"48\",\"viewBox\":\"0 0 48 48\"};\n\nmodule.exports = FullscreenExitIcon;\n\nFullscreenExitIcon.default = FullscreenExitIcon;\n","// minimal replacement for https://github.com/JedWatson/classnames\n// inspired by https://github.com/FormidableLabs/react-live/blob/5ca26733f5a866d4af2b4782024113cbbe76f54a/src/utils/cn.js\nfunction classNames(...args) {\n  return args\n    .map(reduceHash)\n    .filter(Boolean)\n    .join(' ');\n}\n\nfunction reduceHash(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  return Object.keys(obj)\n    .filter(key => obj[key])\n    .join(' ');\n}\n\nexport default classNames;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from '../../utils/classNames';\n\nconst ButtonWrapper = forwardRef(({ className, children, ...rest }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={classNames('cassette__media_button_wrapper', className)}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n});\n\nButtonWrapper.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nexport default ButtonWrapper;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { playerContextFilter } from '@cassette/core';\n\nimport ButtonWrapper from './common/ButtonWrapper';\nimport classNames from '../utils/classNames';\n\n/**\n * A button which, when clicked, toggles whether the media is paused\n */\nexport class PlayPauseButton extends PureComponent {\n  render() {\n    const {\n      paused,\n      awaitingPlayResume,\n      activeTrackIndex,\n      onTogglePause,\n      onSelectTrackIndex,\n      trackIndex = activeTrackIndex\n    } = this.props;\n    const isCurrent = activeTrackIndex === trackIndex;\n    return (\n      <ButtonWrapper>\n        <button\n          type=\"button\"\n          className={classNames(\n            'cassette__play_pause_button cassette__media_button',\n            {\n              playing: isCurrent && (!paused || awaitingPlayResume)\n            }\n          )}\n          onClick={\n            isCurrent ? onTogglePause : () => onSelectTrackIndex(trackIndex)\n          }\n        >\n          <div className=\"foreground\">\n            <div className=\"left\" />\n            <div className=\"right\" />\n          </div>\n        </button>\n      </ButtonWrapper>\n    );\n  }\n}\n\nPlayPauseButton.propTypes = {\n  paused: PropTypes.bool.isRequired,\n  awaitingPlayResume: PropTypes.bool.isRequired,\n  activeTrackIndex: PropTypes.number.isRequired,\n  onTogglePause: PropTypes.func.isRequired,\n  onSelectTrackIndex: PropTypes.func.isRequired,\n  /**\n   * By default the button controls playback of whichever track is active,\n   * but this prop can be specified to make the button control playback of\n   * a specific track (for example in a playlist track selection view where\n   * each track as a play/pause button next to it)\n   */\n  trackIndex: PropTypes.number\n};\n\nexport default playerContextFilter(PlayPauseButton, [\n  'paused',\n  'awaitingPlayResume',\n  'activeTrackIndex',\n  'onTogglePause',\n  'onSelectTrackIndex'\n]);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ButtonWrapper from './ButtonWrapper';\nimport classNames from '../../utils/classNames';\n\nexport class SkipButton extends PureComponent {\n  render() {\n    const { back, onClick } = this.props;\n    return (\n      <ButtonWrapper>\n        <button\n          type=\"button\"\n          className={classNames(\n            'cassette__skip_button cassette__media_button',\n            {\n              back\n            }\n          )}\n          onClick={onClick}\n        >\n          <div className=\"skip_button_inner foreground\">\n            <div className=\"right_facing_triangle\" />\n            <div className=\"right_facing_triangle\" />\n            <div className=\"vertical_bar\" />\n          </div>\n        </button>\n      </ButtonWrapper>\n    );\n  }\n}\n\nSkipButton.propTypes = {\n  back: PropTypes.bool,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default SkipButton;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { playerContextFilter } from '@cassette/core';\n\nimport SkipButton from './common/SkipButton';\n\n/**\n * A button which, when clicked, either skips to the previous track in the playlist or to the beginning of the current playing track, depending upon the current elapsed time\n */\nexport class BackSkipButton extends PureComponent {\n  render() {\n    return <SkipButton back onClick={this.props.onBackSkip} />;\n  }\n}\n\nBackSkipButton.propTypes = {\n  onBackSkip: PropTypes.func.isRequired\n};\n\nexport default playerContextFilter(BackSkipButton, ['onBackSkip']);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { playerContextFilter } from '@cassette/core';\n\nimport SkipButton from './common/SkipButton';\n\n/**\n * A button which, when clicked, skips to the next track in the playlist\n */\nexport class ForwardSkipButton extends PureComponent {\n  render() {\n    return <SkipButton onClick={this.props.onForwardSkip} />;\n  }\n}\n\nForwardSkipButton.propTypes = {\n  onForwardSkip: PropTypes.func.isRequired\n};\n\nexport default playerContextFilter(ForwardSkipButton, ['onForwardSkip']);\n","import VolumeOffIcon from 'svg-react-loader?name=RepeatIcon!material-design-icons/av/svg/design/ic_volume_off_48px.svg?';\nimport VolumeMuteIcon from 'svg-react-loader?name=RepeatIcon!material-design-icons/av/svg/design/ic_volume_mute_48px.svg?';\nimport VolumeDownIcon from 'svg-react-loader?name=RepeatIcon!material-design-icons/av/svg/design/ic_volume_down_48px.svg?';\nimport VolumeUpIcon from 'svg-react-loader?name=RepeatIcon!material-design-icons/av/svg/design/ic_volume_up_48px.svg?';\n\nfunction getVolumeIconComponent(volume, muted) {\n  if (muted) {\n    return VolumeOffIcon;\n  }\n  if (volume === 0) {\n    return VolumeMuteIcon;\n  }\n  if (volume <= 1 / 2) {\n    return VolumeDownIcon;\n  }\n  return VolumeUpIcon;\n}\n\nexport default getVolumeIconComponent;\n","function getVolumeBarDirectionFromPosition(volumeBarPosition) {\n  switch (volumeBarPosition) {\n    case 'rightabove':\n    case 'rightbelow':\n      return 'right';\n    case 'hiddenup':\n    case 'upabove':\n    default:\n      return 'up';\n  }\n}\n\nexport default getVolumeBarDirectionFromPosition;\n","function stopPropagation(e) {\n  e.stopPropagation();\n  e.nativeEvent.stopImmediatePropagation();\n}\n\nexport default stopPropagation;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ProgressBar } from '@cassette/components';\nimport { playerContextFilter } from '@cassette/core';\n\nimport ButtonWrapper from './common/ButtonWrapper';\nimport getVolumeIconComponent from '../utils/getVolumeIconComponent';\nimport getVolumeBarDirectionFromPosition from '../utils/getVolumeBarDirectionFromPosition';\nimport stopPropagation from '../utils/reactStopPropagation';\nimport classNames from '../utils/classNames';\n\nconst volumeControlStyle = {\n  touchAction: 'none'\n};\n\nconst volumeBarContainerHiddenStyle = {\n  opacity: 0\n};\n\n/**\n * A [`MuteButton`](#mutebutton) which, when hovered (with a mouse) or initially tapped (on touch screens), displays a bar for adjusting media volume\n */\nexport class VolumeControl extends PureComponent {\n  static getDerivedStateFromProps(props, state) {\n    const { hover, volumeBarFocused, volumeBarPosition } = state;\n    if (\n      volumeBarPosition &&\n      !hover &&\n      !volumeBarFocused &&\n      !props.setVolumeInProgress\n    ) {\n      return {\n        volumeBarPosition: null\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hover: false,\n      volumeBarFocused: false,\n      // null | 'hiddenup' | 'hiddenright' | 'upabove' | 'rightabove' | 'rightbelow'\n      volumeBarPosition: null\n    };\n\n    this.volumeControlRef = null;\n    this.muteToggleRef = null;\n    this.volumeBarContainerRef = null;\n\n    // bind methods fired on React events\n    this.setVolumeControlRef = this.setVolumeControlRef.bind(this);\n    this.setMuteToggleRef = this.setMuteToggleRef.bind(this);\n    this.setVolumeBarContainerRef = this.setVolumeBarContainerRef.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleVolumeBarFocus = this.handleVolumeBarFocus.bind(this);\n    this.handleVolumeBarBlur = this.handleVolumeBarBlur.bind(this);\n\n    // bind listeners to add on mount and remove on unmount\n    this.handleMuteToggleTouchStart = this.handleMuteToggleTouchStart.bind(\n      this\n    );\n  }\n\n  componentDidMount() {\n    /* this should be a normal React listener but there seems to be a bug\n     * in React preventing that from working as expected:\n     * https://github.com/facebook/react/issues/9809\n     */\n    this.muteToggleRef.addEventListener(\n      'touchstart',\n      this.handleMuteToggleTouchStart\n    );\n    /* since touchstart bubbling from inside this component is canceled\n     * we need to manually trigger mouseleave for touch devices\n     */\n    document.addEventListener('touchstart', this.handleMouseLeave);\n  }\n\n  componentDidUpdate() {\n    /* if we've applied a hidden class to our volume bar, it's because\n     * we need to measure the element dimensions in order to figure out\n     * where and in which direction to position it. if there isn't enough\n     * vertical space above the control button, then we'll position the\n     * bar hidden and left-to-right to measure it again on the next\n     * componentDidUpdate. then if there's room we'll place it either\n     * above or below (there's no good way to vertically position the\n     * volume bar below the control button, so we skip that option).\n     * granted - it's certainly not ideal to need to check dom dimensions\n     * before placing an element, but a user could have applied unanticipated\n     * styles we won't know about unless we check.\n     */\n    const { volumeBarPosition } = this.state;\n    if (\n      volumeBarPosition === 'hiddenup' ||\n      volumeBarPosition === 'hiddenright'\n    ) {\n      const volumeControlRect = this.volumeControlRef.getBoundingClientRect();\n      const top = volumeControlRect.top;\n      const volumeBarContainerHeight = this.volumeBarContainerRef.offsetHeight;\n      let newPosition;\n      if (volumeBarPosition === 'hiddenup') {\n        newPosition =\n          volumeBarContainerHeight <= top ? 'upabove' : 'hiddenright';\n      } else {\n        if (volumeBarContainerHeight <= top) {\n          newPosition = 'rightabove';\n        } else {\n          const viewportHeight = document.documentElement.clientHeight;\n          const bottom = viewportHeight - volumeControlRect.bottom;\n          newPosition =\n            volumeBarContainerHeight <= bottom ? 'rightbelow' : null;\n        }\n      }\n      this.setState({\n        volumeBarPosition: newPosition\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.muteToggleRef.removeEventListener(\n      'touchstart',\n      this.handleMuteToggleTouchStart\n    );\n    document.removeEventListener('touchstart', this.handleMouseLeave);\n  }\n\n  setVolumeControlRef(ref) {\n    this.volumeControlRef = ref;\n  }\n\n  setMuteToggleRef(ref) {\n    this.muteToggleRef = ref;\n  }\n\n  setVolumeBarContainerRef(ref) {\n    this.volumeBarContainerRef = ref;\n  }\n\n  handleMouseEnter() {\n    this.setState(state => ({\n      hover: true,\n      volumeBarPosition: state.volumeBarPosition || 'hiddenup'\n    }));\n  }\n\n  handleMouseLeave() {\n    this.setState(state => ({\n      hover: false,\n      volumeBarPosition:\n        state.volumeBarFocused || this.props.setVolumeInProgress\n          ? state.volumeBarPosition\n          : null\n    }));\n  }\n\n  handleVolumeBarFocus() {\n    this.setState(state => ({\n      volumeBarFocused: true,\n      volumeBarPosition: state.volumeBarPosition || 'hiddenup'\n    }));\n  }\n\n  handleVolumeBarBlur() {\n    this.setState(state => ({\n      volumeBarFocused: false,\n      volumeBarPosition:\n        state.hover || this.props.setVolumeInProgress\n          ? state.volumeBarPosition\n          : null\n    }));\n  }\n\n  handleMuteToggleTouchStart(e) {\n    if (!this.state.hover && !this.state.volumeBarFocused) {\n      e.preventDefault();\n      this.handleMouseEnter();\n    }\n  }\n\n  renderHandle() {\n    return (\n      <div\n        className={classNames('handle', {\n          highlight: this.props.setVolumeInProgress\n        })}\n      >\n        <div />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      volume,\n      muted,\n      onSetVolume,\n      onSetVolumeComplete,\n      onToggleMuted\n    } = this.props;\n    const { hover, volumeBarFocused, volumeBarPosition } = this.state;\n    const VolumeIcon = getVolumeIconComponent(volume, muted);\n    return (\n      <ButtonWrapper\n        ref={this.setVolumeControlRef}\n        className=\"cassette__volume_control\"\n        style={volumeControlStyle}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        onTouchStart={stopPropagation}\n      >\n        <button\n          ref={this.setMuteToggleRef}\n          type=\"button\"\n          className={classNames(\n            'cassette__material_toggle cassette__media_button cassette__mute_btn',\n            {\n              highlight: hover || volumeBarFocused,\n              on: !muted\n            }\n          )}\n          onClick={onToggleMuted}\n        >\n          <div className=\"foreground inner\">\n            <VolumeIcon width=\"100%\" height=\"100%\" />\n          </div>\n        </button>\n        <div\n          style={volumeBarPosition ? undefined : volumeBarContainerHiddenStyle}\n          ref={this.setVolumeBarContainerRef}\n          className={classNames(\n            'cassette__volume_control__volume_bar_container',\n            volumeBarPosition\n          )}\n          onFocus={this.handleVolumeBarFocus}\n          onBlur={this.handleVolumeBarBlur}\n        >\n          <ProgressBar\n            className={classNames(\n              'cassette__volume_control__volume_bar',\n              volumeBarPosition\n            )}\n            progressClassName=\"volume\"\n            progress={muted ? 0 : volume}\n            progressDirection={getVolumeBarDirectionFromPosition(\n              volumeBarPosition\n            )}\n            handle={this.renderHandle()}\n            onAdjustProgress={onSetVolume}\n            onAdjustComplete={onSetVolumeComplete}\n          />\n        </div>\n      </ButtonWrapper>\n    );\n  }\n}\n\nVolumeControl.propTypes = {\n  volume: PropTypes.number.isRequired,\n  muted: PropTypes.bool.isRequired,\n  setVolumeInProgress: PropTypes.bool.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onSetVolumeComplete: PropTypes.func.isRequired,\n  onToggleMuted: PropTypes.func.isRequired\n};\n\nexport default playerContextFilter(VolumeControl, [\n  'volume',\n  'muted',\n  'setVolumeInProgress',\n  'onSetVolume',\n  'onSetVolumeComplete',\n  'onToggleMuted'\n]);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { playerContextFilter } from '@cassette/core';\n\nimport ButtonWrapper from './common/ButtonWrapper';\nimport getVolumeIconComponent from '../utils/getVolumeIconComponent';\nimport classNames from '../utils/classNames';\n\n/**\n * A button which, when clicked, toggles whether the media's audio is muted\n */\nexport class MuteButton extends PureComponent {\n  render() {\n    const { volume, muted, onToggleMuted } = this.props;\n    const VolumeIcon = getVolumeIconComponent(volume, muted);\n    return (\n      <ButtonWrapper>\n        <button\n          type=\"button\"\n          className={classNames(\n            'cassette__material_toggle cassette__media_button cassette__mute_btn',\n            { on: !muted }\n          )}\n          onClick={onToggleMuted}\n        >\n          <div className=\"foreground inner\">\n            <VolumeIcon width=\"100%\" height=\"100%\" />\n          </div>\n        </button>\n      </ButtonWrapper>\n    );\n  }\n}\n\nMuteButton.propTypes = {\n  volume: PropTypes.number.isRequired,\n  muted: PropTypes.bool.isRequired,\n  onToggleMuted: PropTypes.func.isRequired\n};\n\nexport default playerContextFilter(MuteButton, [\n  'volume',\n  'muted',\n  'onToggleMuted'\n]);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport RepeatIcon from 'svg-react-loader?name=RepeatIcon!material-design-icons/av/svg/design/ic_repeat_48px.svg?';\nimport RepeatOneIcon from 'svg-react-loader?name=RepeatOneIcon!material-design-icons/av/svg/design/ic_repeat_one_48px.svg?';\n\nimport {\n  playerContextFilter,\n  PlayerPropTypes,\n  repeatStrategyOptions\n} from '@cassette/core';\n\nimport ButtonWrapper from './common/ButtonWrapper';\nimport classNames from '../utils/classNames';\n\nfunction getNextRepeatStrategy(repeatStrategy) {\n  let nextIndex = repeatStrategyOptions.indexOf(repeatStrategy) + 1;\n  if (nextIndex >= repeatStrategyOptions.length) {\n    nextIndex = 0;\n  }\n  return repeatStrategyOptions[nextIndex];\n}\n\n/**\n * A button which, when clicked, cycles to the next `repeatStrategy` (`none`, `playlist` or `track`)\n */\nexport class RepeatButton extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    // bind methods fired on React events\n    this.handleNextRepeatStrategy = this.handleNextRepeatStrategy.bind(this);\n  }\n\n  handleNextRepeatStrategy() {\n    this.props.onSetRepeatStrategy(\n      getNextRepeatStrategy(this.props.repeatStrategy)\n    );\n  }\n\n  render() {\n    const { repeatStrategy } = this.props;\n    const Icon = repeatStrategy === 'track' ? RepeatOneIcon : RepeatIcon;\n    return (\n      <ButtonWrapper>\n        <button\n          type=\"button\"\n          className={classNames(\n            'cassette__material_toggle cassette__media_button cassette__repeat_btn',\n            { on: repeatStrategy !== 'none' }\n          )}\n          onClick={this.handleNextRepeatStrategy}\n        >\n          <div className=\"inner foreground\">\n            <Icon width=\"100%\" height=\"100%\" />\n          </div>\n        </button>\n      </ButtonWrapper>\n    );\n  }\n}\n\nRepeatButton.propTypes = {\n  repeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  onSetRepeatStrategy: PropTypes.func.isRequired\n};\n\nexport default playerContextFilter(RepeatButton, [\n  'repeatStrategy',\n  'onSetRepeatStrategy'\n]);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ShuffleIcon from 'svg-react-loader?name=ShuffleIcon!material-design-icons/av/svg/design/ic_shuffle_48px.svg?';\n\nimport { playerContextFilter } from '@cassette/core';\n\nimport ButtonWrapper from './common/ButtonWrapper';\nimport classNames from '../utils/classNames';\n\n/**\n * A button which, when clicked, toggles whether the playlist is being played in specified order or in shuffle order\n */\nexport class ShuffleButton extends PureComponent {\n  render() {\n    const { shuffle, onToggleShuffle } = this.props;\n    return (\n      <ButtonWrapper>\n        <button\n          type=\"button\"\n          className={classNames(\n            'cassette__material_toggle cassette__media_button cassette__shuffle_btn',\n            { on: shuffle }\n          )}\n          onClick={onToggleShuffle}\n        >\n          <div className=\"inner foreground\">\n            <ShuffleIcon width=\"100%\" height=\"100%\" />\n          </div>\n        </button>\n      </ButtonWrapper>\n    );\n  }\n}\n\nShuffleButton.propTypes = {\n  shuffle: PropTypes.bool.isRequired,\n  onToggleShuffle: PropTypes.func.isRequired\n};\n\nexport default playerContextFilter(ShuffleButton, [\n  'shuffle',\n  'onToggleShuffle'\n]);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MaybeMarquee } from '@cassette/components';\n\nexport class MediaStatusBar extends PureComponent {\n  render() {\n    const { style, displayText, displayTime } = this.props;\n    return (\n      <div className=\"cassette__media_status_bar\" style={style}>\n        <div className=\"cassette__media_info_marquee\">\n          <MaybeMarquee content={displayText} />\n        </div>\n        <div className=\"cassette__media_time_progress\">{displayTime}</div>\n      </div>\n    );\n  }\n}\n\nMediaStatusBar.propTypes = {\n  style: PropTypes.object,\n  displayText: PropTypes.string.isRequired,\n  displayTime: PropTypes.string.isRequired\n};\n\nexport default MediaStatusBar;\n","/* converts given number of seconds to standard time display format\n * http://goo.gl/kEvnKn\n */\nfunction convertToTime(number) {\n  const hours = Math.floor(number / (60 * 60));\n  const mins = Math.floor(number / 60) - hours * 60;\n  const secs = Math.floor(number % 60);\n  let time = hours > 0 ? `${hours}:` : '';\n  time += `${mins < 10 && hours > 0 ? '0' : ''}${mins}:`;\n  time += `${secs < 10 ? '0' : ''}${secs}`;\n  return time;\n}\n\nexport default convertToTime;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MediaProgressBar } from '@cassette/components';\nimport {\n  playerContextFilter,\n  PlayerPropTypes,\n  getDisplayText\n} from '@cassette/core';\n\nimport MediaStatusBar from './common/MediaStatusBar';\nimport convertToTime from '../utils/convertToTime';\n\nconst mediaStatusBarStyle = {\n  pointerEvents: 'none'\n};\n\n/**\n * An interactive media progress bar which can be adjusted by dragging, along with a text overlay of the current track metadata and the elapsed time\n */\nexport class MediaProgress extends PureComponent {\n  render() {\n    const {\n      playlist,\n      activeTrackIndex,\n      currentTime,\n      seekPreviewTime,\n      seekInProgress,\n      duration,\n      getDisplayText,\n      durationOverride = duration\n    } = this.props;\n    const time = seekInProgress ? seekPreviewTime : currentTime;\n    return (\n      <div className=\"cassette__media_progress_container\">\n        <MediaProgressBar\n          className=\"cassette__media_progress_bar\"\n          progressClassName=\"progress\"\n          progressDirection=\"right\"\n        />\n        <MediaStatusBar\n          style={mediaStatusBarStyle}\n          displayText={getDisplayText(playlist[activeTrackIndex]) || ''}\n          displayTime={`${convertToTime(time)} / ${convertToTime(\n            durationOverride\n          )}`}\n        />\n      </div>\n    );\n  }\n}\n\nMediaProgress.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  activeTrackIndex: PropTypes.number.isRequired,\n  currentTime: PropTypes.number.isRequired,\n  seekPreviewTime: PropTypes.number.isRequired,\n  seekInProgress: PropTypes.bool.isRequired,\n  duration: PropTypes.number.isRequired,\n  /**\n   * The same as the `getDisplayText` prop for\n   * [`MediaProgressDisplay`](#mediaprogressdisplay)\n   */\n  getDisplayText: PropTypes.func.isRequired,\n  /**\n   * The same as the `durationOverride` prop for\n   * [`MediaProgressDisplay`](#mediaprogressdisplay)\n   */\n  durationOverride: PropTypes.number\n};\n\nMediaProgress.defaultProps = {\n  getDisplayText: getDisplayText\n};\n\nexport default playerContextFilter(MediaProgress, [\n  'playlist',\n  'activeTrackIndex',\n  'currentTime',\n  'seekPreviewTime',\n  'seekInProgress',\n  'duration'\n]);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MediaProgressBarDisplay } from '@cassette/components';\nimport {\n  playerContextFilter,\n  PlayerPropTypes,\n  getDisplayText\n} from '@cassette/core';\n\nimport MediaStatusBar from './common/MediaStatusBar';\nimport convertToTime from '../utils/convertToTime';\n\n/**\n * A non-interactive version of [`MediaProgress`](#mediaprogress) which always uses the `currentTime` of the playing media (which may differ from the `seekPreviewTime` if your app also displays an interactive seek bar)\n */\nexport class MediaProgressDisplay extends PureComponent {\n  render() {\n    const {\n      playlist,\n      activeTrackIndex,\n      currentTime,\n      duration,\n      getDisplayText,\n      durationOverride = duration\n    } = this.props;\n    return (\n      <div className=\"cassette__media_progress_container\">\n        <MediaProgressBarDisplay\n          className=\"cassette__media_progress_bar\"\n          progressClassName=\"progress\"\n          progressDirection=\"right\"\n        />\n        <MediaStatusBar\n          displayText={getDisplayText(playlist[activeTrackIndex]) || ''}\n          displayTime={`${convertToTime(currentTime)} / ${convertToTime(\n            durationOverride\n          )}`}\n        />\n      </div>\n    );\n  }\n}\n\nMediaProgressDisplay.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  activeTrackIndex: PropTypes.number.isRequired,\n  currentTime: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired,\n  /**\n   * Receives a [`track`](#track) object (or `undefined` if none is active)\n   * and returns a string of display text\n   **/\n  getDisplayText: PropTypes.func.isRequired,\n  /**\n   * Sometimes, for example in the case of some media live streams, the\n   * duration property from the media element may not match what we want\n   * to use in the UI for progress displays. `durationOverride` can be set\n   * if some external data on the media duration is available.\n   */\n  durationOverride: PropTypes.number\n};\n\nMediaProgressDisplay.defaultProps = {\n  getDisplayText: getDisplayText\n};\n\nexport default playerContextFilter(MediaProgressDisplay, [\n  'playlist',\n  'activeTrackIndex',\n  'currentTime',\n  'duration'\n]);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport FullscreenIcon from 'svg-react-loader?name=FullscreenIcon!material-design-icons/navigation/svg/design/ic_fullscreen_48px.svg?';\nimport FullscreenExitIcon from 'svg-react-loader?name=FullscreenExitIcon!material-design-icons/navigation/svg/design/ic_fullscreen_exit_48px.svg?';\n\nimport { playerContextFilter } from '@cassette/core';\n\nimport ButtonWrapper from './common/ButtonWrapper';\nimport classNames from '../utils/classNames';\n\n/**\n * A button which, when clicked, tells the surrounding [`FullscreenContextProvider`](#fullscreencontextprovider) (if present) to toggle fullscreen mode\n */\nexport class FullscreenButton extends PureComponent {\n  render() {\n    const { fullscreen, requestFullscreen, requestExitFullscreen } = this.props;\n    const IconComponent = fullscreen ? FullscreenExitIcon : FullscreenIcon;\n    return (\n      <ButtonWrapper>\n        <button\n          type=\"button\"\n          className={classNames(\n            'cassette__material_toggle cassette__media_button cassette__fullscreen_btn',\n            { on: fullscreen }\n          )}\n          onClick={fullscreen ? requestExitFullscreen : requestFullscreen}\n        >\n          <div className=\"inner foreground\">\n            <IconComponent width=\"100%\" height=\"100%\" />\n          </div>\n        </button>\n      </ButtonWrapper>\n    );\n  }\n}\n\nFullscreenButton.propTypes = {\n  fullscreen: PropTypes.bool.isRequired,\n  requestFullscreen: PropTypes.func.isRequired,\n  requestExitFullscreen: PropTypes.func.isRequired\n};\n\nexport default playerContextFilter(FullscreenButton, [\n  'fullscreen',\n  'requestFullscreen',\n  'requestExitFullscreen'\n]);\n","import React, { PureComponent } from 'react';\n\nimport ButtonWrapper from './common/ButtonWrapper';\n\n/**\n * Provides a buffer between control components\n */\nexport class Spacer extends PureComponent {\n  render() {\n    return (\n      <ButtonWrapper>\n        <div className=\"cassette__spacer\" />\n      </ButtonWrapper>\n    );\n  }\n}\n\nexport default Spacer;\n","import { createElement } from 'react';\n\nimport PlayPauseButton from '../controls/PlayPauseButton';\nimport BackSkipButton from '../controls/BackSkipButton';\nimport ForwardSkipButton from '../controls/ForwardSkipButton';\nimport VolumeControl from '../controls/VolumeControl';\nimport MuteButton from '../controls/MuteButton';\nimport RepeatButton from '../controls/RepeatButton';\nimport ShuffleButton from '../controls/ShuffleButton';\nimport MediaProgress from '../controls/MediaProgress';\nimport MediaProgressDisplay from '../controls/MediaProgressDisplay';\nimport FullscreenButton from '../controls/FullscreenButton';\nimport Spacer from '../controls/Spacer';\n\nconst controlComponents = {\n  playpause: PlayPauseButton,\n  backskip: BackSkipButton,\n  forwardskip: ForwardSkipButton,\n  volume: VolumeControl,\n  mute: MuteButton,\n  repeat: RepeatButton,\n  shuffle: ShuffleButton,\n  progress: MediaProgress,\n  progressdisplay: MediaProgressDisplay,\n  fullscreen: FullscreenButton,\n  spacer: Spacer\n};\n\nfunction getRenderPropForControlKey(controlKey) {\n  const component = controlComponents[controlKey];\n  if (!component) {\n    return null;\n  }\n  switch (controlKey) {\n    case 'progress':\n    case 'progressdisplay':\n      return (playerContext, fullscreenContext, { getDisplayText }) => {\n        return createElement(component, { getDisplayText });\n      };\n    default:\n      return () => createElement(component);\n  }\n}\n\nconst cache = {};\nfunction getControlRenderProp(control) {\n  if (typeof control === 'function') {\n    return control;\n  }\n  if (typeof control === 'string') {\n    if (cache[control]) {\n      return cache[control];\n    }\n    const fn = getRenderPropForControlKey(control);\n    cache[control] = fn;\n    return fn;\n  }\n  return null;\n}\n\nexport default getControlRenderProp;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  donotuse_PlayerContext as PlayerContext,\n  FullscreenContextConsumer,\n  PlayerPropTypes,\n  getDisplayText\n} from '@cassette/core';\nimport { VideoDisplay } from '@cassette/components';\n\nimport getControlRenderProp from './utils/getControlRenderProp';\n\nimport './styles/index.scss';\n\nlet nextControlKey = 0;\nfunction getNextControlKey() {\n  return (nextControlKey++).toString();\n}\n\n/**\n * The UI component of [`MediaPlayer`](#mediaplayer), which requires an ancestor [`PlayerContextProvider`](#playercontextprovider) (and optional ancestor [`FullscreenContextProvider`](#fullscreencontextprovider)) in order to work (use this if you need to access the [`playerContext`](#playercontext) or [`fullscreenContext`](#fullscreencontext) from outside the media player UI)\n */\nexport class MediaPlayerControls extends Component {\n  getKeyedChildren(elements) {\n    // cache of keys to use in controls render\n    // (to maintain state in case order changes)\n    this.controlKeys = this.controlKeys || new Map();\n\n    // counts of rendered elements by type\n    const elementsRendered = new Map();\n\n    return elements.map(element => {\n      if (!element) {\n        return element;\n      }\n\n      // support React | Preact | Inferno\n      const type = element.type || element.nodeName || element.tag || '';\n\n      // index within list of keys by type\n      const keyIndex = elementsRendered.get(type) || 0;\n      elementsRendered.set(type, keyIndex + 1);\n\n      const keysForType = this.controlKeys.get(type) || [];\n\n      let key;\n      if (keysForType[keyIndex]) {\n        key = keysForType[keyIndex];\n      } else {\n        key = getNextControlKey();\n        this.controlKeys.set(type, keysForType.concat(key));\n      }\n\n      return React.cloneElement(element, { key });\n    });\n  }\n\n  render() {\n    const {\n      getDisplayText,\n      controls,\n      showVideo,\n      renderVideoDisplay\n    } = this.props;\n\n    return (\n      <FullscreenContextConsumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer>\n            {playerContext => (\n              <div className=\"cassette\">\n                {showVideo &&\n                  renderVideoDisplay(playerContext, fullscreenContext)}\n                <div\n                  className=\"cassette__control_bar\"\n                  title={getDisplayText(\n                    playerContext.playlist[playerContext.activeTrackIndex]\n                  )}\n                >\n                  {this.getKeyedChildren(\n                    controls.map(control => {\n                      const renderControl = getControlRenderProp(control);\n                      return (\n                        renderControl &&\n                        renderControl(playerContext, fullscreenContext, {\n                          getDisplayText\n                        })\n                      );\n                    })\n                  )}\n                </div>\n              </div>\n            )}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContextConsumer>\n    );\n  }\n}\n\nMediaPlayerControls.propTypes = {\n  /** An array of [`control`](#control) values (keyword or render prop) */\n  controls: PropTypes.arrayOf(PlayerPropTypes.control.isRequired).isRequired,\n  /**\n   * Receives a [`track`](#track) object (or `undefined` if none is active)\n   * and returns a string of display text\n   **/\n  getDisplayText: PropTypes.func.isRequired,\n  /** A boolean which must be set `true` to display video */\n  showVideo: PropTypes.bool.isRequired,\n  /**\n   * A function which returns a React element containing the\n   * [`VideoDisplay`](#videodisplay) instance\n   */\n  renderVideoDisplay: PropTypes.func.isRequired\n};\n\nMediaPlayerControls.defaultProps = {\n  controls: [\n    'spacer',\n    'backskip',\n    'playpause',\n    'forwardskip',\n    'spacer',\n    'progress'\n  ],\n  getDisplayText: getDisplayText,\n  showVideo: false,\n  // eslint-disable-next-line no-unused-vars\n  renderVideoDisplay(playerContext, fullscreenContext) {\n    return (\n      <VideoDisplay\n        className=\"cassette__video_display_container\"\n        onClick={playerContext.onTogglePause}\n      />\n    );\n  }\n};\n\nexport default MediaPlayerControls;\n","import React, { Component } from 'react';\n\nimport {\n  PlayerContextProvider,\n  FullscreenContextProvider\n} from '@cassette/core';\n\nimport MediaPlayerControls from './MediaPlayerControls';\n\n/**\n * A media player component which plays a provided playlist of media\n */\nexport class MediaPlayer extends Component {\n  render() {\n    const {\n      getDisplayText,\n      controls,\n      showVideo,\n      renderVideoDisplay,\n      fullscreenEnabled,\n      ...rest\n    } = this.props;\n    return (\n      <FullscreenContextProvider fullscreenEnabled={fullscreenEnabled}>\n        <PlayerContextProvider {...rest}>\n          <MediaPlayerControls\n            getDisplayText={getDisplayText}\n            controls={controls}\n            showVideo={showVideo}\n            renderVideoDisplay={renderVideoDisplay}\n          />\n        </PlayerContextProvider>\n      </FullscreenContextProvider>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  ...PlayerContextProvider.propTypes,\n  ...MediaPlayerControls.propTypes,\n  ...FullscreenContextProvider.propTypes\n};\ndelete MediaPlayer.propTypes.children;\n\nMediaPlayer.defaultProps = {\n  ...PlayerContextProvider.defaultProps,\n  ...MediaPlayerControls.defaultProps,\n  ...FullscreenContextProvider.defaultProps\n};\ndelete MediaPlayer.defaultProps.children;\n\nexport default MediaPlayer;\n"],"sourceRoot":""}